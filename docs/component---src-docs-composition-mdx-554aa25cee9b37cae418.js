(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{LtkJ:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return f})),n.d(t,"default",(function(){return D}));var a=n("Fcif"),o=n("+I+c"),r=n("mXGw"),s=n("/FXl"),i=n("TjRS"),c=n("ZFoC"),p=n("UutA"),l=n("GYKu"),d=n("R82R"),u=n("u44p"),m=n("v6vt"),b=n("5bSt"),y=n("9b5V"),h=n("esdE"),f=(n("aD51"),{});void 0!==f&&f&&f===Object(f)&&Object.isExtensible(f)&&!f.hasOwnProperty("__filemeta")&&Object.defineProperty(f,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/composition.mdx"}});var O=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(s.b)("div",t)}},g=(O("UnavailableDay"),O("ShortcutList"),{_frontmatter:f}),j=i.a;function D(e){var t,n,O=e.components,D=Object(o.a)(e,["components"]);return Object(s.b)(j,Object(a.a)({},g,D,{components:O,mdxType:"MDXLayout"}),Object(s.b)("h1",{id:"composition"},"Composition"),Object(s.b)("p",null,"When you want to do more than style the default components through ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://mark-tate.github.io/use-date-input/theming"}),"theming")," you can replace the default components,\nwith either your own components or use the default components to build a new composition."),Object(s.b)("p",null,Object(s.b)("inlineCode",{parentName:"p"},"CalendarProvider")," provides a ",Object(s.b)("inlineCode",{parentName:"p"},"components")," prop to replace named components with your own version.\nThis provides several options"),Object(s.b)("ul",null,Object(s.b)("li",{parentName:"ul"},"you can change change behavior of the default components"),Object(s.b)("li",{parentName:"ul"},"you can create new compositions of the default components with your own components")),Object(s.b)("p",null,"Common use-cases might be to build a composition of a ",Object(s.b)("inlineCode",{parentName:"p"},"Calendar")," and a shortcut list or compose the ",Object(s.b)("inlineCode",{parentName:"p"},"Calendar")," together with other UI controls or branding."),Object(s.b)("p",null,"If you want to extend/replace components then redefine those components via their name, using the ",Object(s.b)("inlineCode",{parentName:"p"},"components")," prop.  "),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'import dateAdapter from "../packages/date-fns-adapter";\nimport { Calendar } from "../packages/core";\n\nconst myComponents = {\n    Root: props => { /* My component */ },\n    Header: props => {},\n    AnimatedMonthGroup: props => {},\n    AnimatedGroup: props => {},\n    MonthGroup: props => {},\n    Month: props => {},\n    MonthHeader: props => {},\n    Week: props => {},\n    WeekHeader: props => {},\n    DayOfWeek: props => {},\n    Day: props => {}\n};\n\nconst MyCalendar = () => {\n    return (\n        <Calendar\n            adapter={dateAdapter}\n            components={myComponents}\n        />\n    );\n};\n')),Object(s.b)("p",null,"For instance, if you want to style days with your own state (such as blocked or un-available), then you simply replace or\nextend the current ",Object(s.b)("inlineCode",{parentName:"p"},"Day")," component"),Object(s.b)(c.c,{__position:0,__code:"() => {\n  // import styled from \"styled-components\";\n  // import dateAdapter from \"@use-date-input/date-fns-adapter\";\n  // import getDay from \"date-fns/getDay\";\n  // import { Calendar, Day } from \"@use-date-input/core\";\n  const MONDAY = 1\n  const UnavailableDay = styled(Day)(props => ({\n    background: 'url(\"/public/cross.svg\")',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'bottom 6px right 5px',\n    backgroundSize: '50% 50%, auto',\n  }))\n  const isMonday = date => getDay(date) === MONDAY\n  function BlockoutMondaysRenderer(props) {\n    if (isMonday(props.day)) {\n      return (\n        <span style={{ cursor: 'not-allowed' }}>\n          <UnavailableDay {...props} disabled />\n        </span>\n      )\n    }\n    return <Day {...props} />\n  }\n  return (\n    <Calendar\n      adapter={dateAdapter}\n      components={{\n        Day: BlockoutMondaysRenderer,\n      }}\n      isDayDisabled={isMonday}\n      numOfVisibleMonths={2}\n      numOfColumns={2}\n    />\n  )\n}",__scope:(t={props:D,DefaultLayout:i.a,useRef:r.useRef,useState:r.useState,Playground:c.c,styled:p.b,createDateAPI:l.q,Calendar:l.c,CalendarProvider:l.d,Day:l.f,useCalendarDispatch:l.s,useCalendarState:l.u,Root:l.l,makeStyles:d.a,List:u.a,ListItem:m.a,ListItemText:b.a,dateAdapter:y.a,getDay:h.a},t.DefaultLayout=i.a,t._frontmatter=f,t),mdxType:"Playground"},(function(){var e=Object(p.b)(l.f)((function(e){return{background:'url("/public/cross.svg")',backgroundRepeat:"no-repeat",backgroundPosition:"bottom 6px right 5px",backgroundSize:"50% 50%, auto"}})),t=function(e){return 1===Object(h.a)(e)};return Object(s.b)(l.c,{adapter:y.a,components:{Day:function(n){return t(n.day)?Object(s.b)("span",{style:{cursor:"not-allowed"}},Object(s.b)(e,Object(a.a)({},n,{disabled:!0,mdxType:"UnavailableDay"}))):Object(s.b)(l.f,Object(a.a)({},n,{mdxType:"Day"}))}},isDayDisabled:t,numOfVisibleMonths:2,numOfColumns:2,mdxType:"Calendar"})})),Object(s.b)("p",null,"Here is an example of ",Object(s.b)("inlineCode",{parentName:"p"},"Calendar")," composed together with components from Material-UI to create an additional list of shorcuts.\nThis example uses a hook called ",Object(s.b)("inlineCode",{parentName:"p"},"useCalendarDispatch"),", to access dispatch methods, allowing you to dispatch actions to the reducer\nfrom your custom Root."),Object(s.b)("p",null,"In the example below, select a startDate, to see a Material-UI List control appear."),Object(s.b)(c.c,{__position:1,__code:"() => {\n  // import { createDateAPI, Calendar, CalendarProvider, useCalendarDispatch, useCalendarState, Root } from \"@use-date-input/core\";\n  // import dateAdapter from \"@use-date-input/date-fns-adapter\";\n  // import { makeStyles } from '@material-ui/core/styles';\n  // import List from '@material-ui/core/List';\n  // import ListItem from '@material-ui/core/ListItem';\n  // import ListItemText from '@material-ui/core/ListItemText';\n  const ShortcutList = () => {\n    const dateAPI = createDateAPI({ adapter: dateAdapter })\n    const useStyles = makeStyles(theme => ({\n      root: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.primary.main,\n        display: 'inline-block',\n        marginTop: '40px',\n        verticalAlign: 'top',\n        width: 150,\n      },\n    }))\n    const { startDate } = useCalendarState()\n    const { setEndDate, setVisibleFromDate } = useCalendarDispatch()\n    const classes = useStyles()\n    if (!startDate) {\n      return null\n    }\n    const createNightsSelectHandler = numOfNights => () => {\n      setEndDate(dateAPI.addDays(startDate, numOfNights))\n      setVisibleFromDate(dateAPI.startOfMonth(startDate))\n    }\n    const handleTenNights = createNightsSelectHandler(10)\n    const handleSevenNights = createNightsSelectHandler(7)\n    const handleThreeNights = createNightsSelectHandler(3)\n    return (\n      <div className={classes.root}>\n        <List component=\"nav\" dense aria-label=\"date range shortcuts\">\n          <ListItem button onClick={handleTenNights}>\n            <ListItemText primary=\"Stay for 10 nights\" />\n          </ListItem>\n          <ListItem button onClick={handleSevenNights}>\n            <ListItemText primary=\"Stay for 7 nights\" />\n          </ListItem>\n          <ListItem button onClick={handleThreeNights}>\n            <ListItemText primary=\"Stay for 3 nights\" />\n          </ListItem>\n        </List>\n      </div>\n    )\n  }\n  const CustomRoot = props => (\n    <div>\n      <ShortcutList />\n      <Root {...props} />\n    </div>\n  )\n  return (\n    <Calendar\n      adapter={dateAdapter}\n      allowRange\n      components={{\n        Root: CustomRoot,\n      }}\n      numOfVisibleMonths={12}\n      numOfColumns={4}\n    />\n  )\n}",__scope:(n={props:D,DefaultLayout:i.a,useRef:r.useRef,useState:r.useState,Playground:c.c,styled:p.b,createDateAPI:l.q,Calendar:l.c,CalendarProvider:l.d,Day:l.f,useCalendarDispatch:l.s,useCalendarState:l.u,Root:l.l,makeStyles:d.a,List:u.a,ListItem:m.a,ListItemText:b.a,dateAdapter:y.a,getDay:h.a},n.DefaultLayout=i.a,n._frontmatter=f,n),mdxType:"Playground"},(function(){var e=function(){var e=Object(l.q)({adapter:y.a}),t=Object(d.a)((function(e){return{root:{backgroundColor:e.palette.background.paper,color:e.palette.primary.main,display:"inline-block",marginTop:"40px",verticalAlign:"top",width:150}}})),n=Object(l.u)().startDate,a=Object(l.s)(),o=a.setEndDate,r=a.setVisibleFromDate,i=t();if(!n)return null;var c=function(t){return function(){o(e.addDays(n,t)),r(e.startOfMonth(n))}},p=c(10),h=c(7),f=c(3);return Object(s.b)("div",{className:i.root},Object(s.b)(u.a,{component:"nav",dense:!0,"aria-label":"date range shortcuts",mdxType:"List"},Object(s.b)(m.a,{button:!0,onClick:p,mdxType:"ListItem"},Object(s.b)(b.a,{primary:"Stay for 10 nights",mdxType:"ListItemText"})),Object(s.b)(m.a,{button:!0,onClick:h,mdxType:"ListItem"},Object(s.b)(b.a,{primary:"Stay for 7 nights",mdxType:"ListItemText"})),Object(s.b)(m.a,{button:!0,onClick:f,mdxType:"ListItem"},Object(s.b)(b.a,{primary:"Stay for 3 nights",mdxType:"ListItemText"}))))};return Object(s.b)(l.c,{adapter:y.a,allowRange:!0,components:{Root:function(t){return Object(s.b)("div",null,Object(s.b)(e,{mdxType:"ShortcutList"}),Object(s.b)(l.l,Object(a.a)({},t,{mdxType:"Root"})))}},numOfVisibleMonths:12,numOfColumns:4,mdxType:"Calendar"})})))}void 0!==D&&D&&D===Object(D)&&Object.isExtensible(D)&&!D.hasOwnProperty("__filemeta")&&Object.defineProperty(D,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/composition.mdx"}}),D.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-composition-mdx-554aa25cee9b37cae418.js.map