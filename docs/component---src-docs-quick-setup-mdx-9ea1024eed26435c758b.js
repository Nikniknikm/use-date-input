(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{"6XNh":function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return c})),t.d(n,"default",(function(){return l}));var a=t("Fcif"),r=t("+I+c"),d=(t("mXGw"),t("/FXl")),o=t("TjRS"),c=(t("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/quick-setup.mdx"}});var s={_frontmatter:c},p=o.a;function l(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(d.b)(p,Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(d.b)("h2",{id:"quick-setup"},"Quick Setup"),Object(d.b)("p",null,Object(d.b)("inlineCode",{parentName:"p"},"use-date-input")," can be used with any of the popular date frameworks with an adapter."),Object(d.b)("ul",null,Object(d.b)("li",{parentName:"ul"},Object(d.b)("a",{href:"https://date-fns.org/",target:"__blank__"},"date-fns")),Object(d.b)("li",{parentName:"ul"},Object(d.b)("a",{href:"https://day.js.org/",target:"__blank__"},"dayjs")),Object(d.b)("li",{parentName:"ul"},Object(d.b)("a",{href:"https://moment.github.io/luxon/",target:"__blank__"},"luxon")),Object(d.b)("li",{parentName:"ul"},Object(d.b)("a",{href:"https://momentjs.com/",target:"__blank__"},"moment"))),Object(d.b)("p",null,"Ensure you have added both the date framework and the corresponsing ",Object(d.b)("inlineCode",{parentName:"p"},"use-date-input")," adapter."),Object(d.b)("h3",{id:"for-date-fns-users"},"For date-fns users"),Object(d.b)("pre",null,Object(d.b)("code",Object(a.a)({parentName:"pre"},{}),"yarn add date-fns \nyarn add @use-date-input/core\nyarn add @use-date-input/date-fns-adapter \nyarn add styled-components \n")),Object(d.b)("h3",{id:"for-dayjs-users"},"For dayjs users"),Object(d.b)("pre",null,Object(d.b)("code",Object(a.a)({parentName:"pre"},{}),"yarn add dayjs \nyarn add @use-date-input/core\nyarn add @use-date-input/dayjs-adapter \nyarn add styled-components \n")),Object(d.b)("h3",{id:"for-luxon-users"},"For luxon users"),Object(d.b)("pre",null,Object(d.b)("code",Object(a.a)({parentName:"pre"},{}),"yarn add luxon \nyarn add @use-date-input/core\nyarn add @use-date-input/luxon-adapter \nyarn add styled-components \n")),Object(d.b)("h3",{id:"for-moment-users"},"For moment users"),Object(d.b)("pre",null,Object(d.b)("code",Object(a.a)({parentName:"pre"},{}),"yarn add moment \nyarn add @use-date-input/core\nyarn add @use-date-input/moment-adapter \nyarn add styled-components \n")),Object(d.b)("h2",{id:"using-the-components-without-hooks"},"Using the Components without Hooks"),Object(d.b)("p",null,"A very basic example of ",Object(d.b)("inlineCode",{parentName:"p"},"Calendar")," component."),Object(d.b)("pre",null,Object(d.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { Calendar } from '@use-date-input/core';\n\nfunction oneMonthCalendar() {\n    const handleChange = newSelectedDate => console.log('calendar changed selected date', newSelectedDate);\n    return (<Calendar adapter={dateAdapter} onChange={handleChange}/>);\n}\n")),Object(d.b)("h3",{id:"basic-date-input-example"},"Basic Date Input Example"),Object(d.b)("p",null,"A very basic example of ",Object(d.b)("inlineCode",{parentName:"p"},"useDateInput")," hook, linking an HTML ",Object(d.b)("inlineCode",{parentName:"p"},"input")," and the ",Object(d.b)("inlineCode",{parentName:"p"},"Calendar")," component."),Object(d.b)("pre",null,Object(d.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import React, { useRef, useState } from 'react';\nimport { useDateInput } from \"./index.esm\";\nimport dateFnsAdapter from \"./index.esm\";\nimport { parse } from 'date-fns';\n\nconst defaultParseDate = value => parse(value, 'dd/MM/yyyy', new Date());\n\nfunction oneMonthDateInput() {\n    const [date, setDate] = useState('');\n    const actions = useRef();\n\n    const handleInputChange = event => {\n        const { value } = event.target;\n        console.log('input changed to', value);\n        setDate(event.target.value);\n    };\n\n    const handleCalendarChange = newSelectedDate => {\n        console.log('calendar changed selected date', newSelectedDate);\n        const { dateAPI } = actions.current;\n        setDate(dateAPI.format(newSelectedDate, 'dd/MM/yyyy'));\n    };\n\n    const {\n        Calendar,\n        CalendarProvider,\n        getCalendarProviderProps,\n        getInputProps\n    } = useDateInput({\n        actions,\n        parse: defaultParseDate\n    });\n\n    return (\n        <>\n            <input {...getInputProps({ onChange: handleInputChange })} value={date} />\n            <CalendarProvider\n                {...getCalendarProviderProps({\n                    adapter: dateFnsAdapter,\n                    onCalendarChange: handleCalendarChange,\n                })}\n            >\n                <Calendar />\n            </CalendarProvider>\n        </>\n    );\n}\n")))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/quick-setup.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-quick-setup-mdx-9ea1024eed26435c758b.js.map