{"version":3,"sources":["webpack:///../src/docs/quick-setup.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","href","target","isMDXComponent"],"mappings":"0PAMaA,G,UAAe,S,0MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,eADR,eAGA,qBAAG,0BAAYC,WAAW,KAAvB,kBAAH,yEACA,sBACE,kBAAIA,WAAW,MAAK,iBAAGC,KAAK,wBAAwBC,OAAO,aAAvC,aACpB,kBAAIF,WAAW,MAAK,iBAAGC,KAAK,sBAAsBC,OAAO,aAArC,UACpB,kBAAIF,WAAW,MAAK,iBAAGC,KAAK,kCAAkCC,OAAO,aAAjD,UACpB,kBAAIF,WAAW,MAAK,iBAAGC,KAAK,wBAAwBC,OAAO,aAAvC,YAEtB,4FAA2E,0BAAYF,WAAW,KAAvB,kBAA3E,aACA,iBAAQ,CACN,GAAM,sBADR,sBAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,iIAKL,iBAAQ,CACN,GAAM,mBADR,mBAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,2HAKL,iBAAQ,CACN,GAAM,mBADR,mBAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,2HAKL,iBAAQ,CACN,GAAM,oBADR,oBAGA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,6HAKL,iBAAQ,CACN,GAAM,sCADR,sCAGA,gDAA+B,0BAAYA,WAAW,KAAvB,YAA/B,eACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,iRASL,iBAAQ,CACN,GAAM,4BADR,4BAGA,gDAA+B,0BAAYA,WAAW,KAAvB,gBAA/B,0BAAkH,0BAAYA,WAAW,KAAvB,SAAlH,YAAgL,0BAAYA,WAAW,KAAvB,YAAhL,eACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,s5C,wMAsDTJ,EAAWO,gBAAiB","file":"component---src-docs-quick-setup-mdx-9ea1024eed26435c758b.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mark/Documents/dev/use-date-input3/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2 {...{\n      \"id\": \"quick-setup\"\n    }}>{`Quick Setup`}</h2>\n    <p><inlineCode parentName=\"p\">{`use-date-input`}</inlineCode>{` can be used with any of the popular date frameworks with an adapter.`}</p>\n    <ul>\n      <li parentName=\"ul\"><a href=\"https://date-fns.org/\" target=\"__blank__\">date-fns</a></li>\n      <li parentName=\"ul\"><a href=\"https://day.js.org/\" target=\"__blank__\">dayjs</a></li>\n      <li parentName=\"ul\"><a href=\"https://moment.github.io/luxon/\" target=\"__blank__\">luxon</a></li>\n      <li parentName=\"ul\"><a href=\"https://momentjs.com/\" target=\"__blank__\">moment</a></li>\n    </ul>\n    <p>{`Ensure you have added both the date framework and the corresponsing `}<inlineCode parentName=\"p\">{`use-date-input`}</inlineCode>{` adapter.`}</p>\n    <h3 {...{\n      \"id\": \"for-date-fns-users\"\n    }}>{`For date-fns users`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`yarn add date-fns \nyarn add @use-date-input/core\nyarn add @use-date-input/date-fns-adapter \nyarn add styled-components \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"for-dayjs-users\"\n    }}>{`For dayjs users`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`yarn add dayjs \nyarn add @use-date-input/core\nyarn add @use-date-input/dayjs-adapter \nyarn add styled-components \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"for-luxon-users\"\n    }}>{`For luxon users`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`yarn add luxon \nyarn add @use-date-input/core\nyarn add @use-date-input/luxon-adapter \nyarn add styled-components \n`}</code></pre>\n    <h3 {...{\n      \"id\": \"for-moment-users\"\n    }}>{`For moment users`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`yarn add moment \nyarn add @use-date-input/core\nyarn add @use-date-input/moment-adapter \nyarn add styled-components \n`}</code></pre>\n    <h2 {...{\n      \"id\": \"using-the-components-without-hooks\"\n    }}>{`Using the Components without Hooks`}</h2>\n    <p>{`A very basic example of `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { Calendar } from '@use-date-input/core';\n\nfunction oneMonthCalendar() {\n    const handleChange = newSelectedDate => console.log('calendar changed selected date', newSelectedDate);\n    return (<Calendar adapter={dateAdapter} onChange={handleChange}/>);\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"basic-date-input-example\"\n    }}>{`Basic Date Input Example`}</h3>\n    <p>{`A very basic example of `}<inlineCode parentName=\"p\">{`useDateInput`}</inlineCode>{` hook, linking an HTML `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` and the `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React, { useRef, useState } from 'react';\nimport { useDateInput } from \"./index.esm\";\nimport dateFnsAdapter from \"./index.esm\";\nimport { parse } from 'date-fns';\n\nconst defaultParseDate = value => parse(value, 'dd/MM/yyyy', new Date());\n\nfunction oneMonthDateInput() {\n    const [date, setDate] = useState('');\n    const actions = useRef();\n\n    const handleInputChange = event => {\n        const { value } = event.target;\n        console.log('input changed to', value);\n        setDate(event.target.value);\n    };\n\n    const handleCalendarChange = newSelectedDate => {\n        console.log('calendar changed selected date', newSelectedDate);\n        const { dateAPI } = actions.current;\n        setDate(dateAPI.format(newSelectedDate, 'dd/MM/yyyy'));\n    };\n\n    const {\n        Calendar,\n        CalendarProvider,\n        getCalendarProviderProps,\n        getInputProps\n    } = useDateInput({\n        actions,\n        parse: defaultParseDate\n    });\n\n    return (\n        <>\n            <input {...getInputProps({ onChange: handleInputChange })} value={date} />\n            <CalendarProvider\n                {...getCalendarProviderProps({\n                    adapter: dateFnsAdapter,\n                    onCalendarChange: handleCalendarChange,\n                })}\n            >\n                <Calendar />\n            </CalendarProvider>\n        </>\n    );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}