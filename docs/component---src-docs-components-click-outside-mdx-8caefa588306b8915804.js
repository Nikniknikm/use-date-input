(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"+/g1":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return O})),n.d(t,"default",(function(){return p}));var a=n("Fcif"),i=n("+I+c"),l=n("mXGw"),o=n("/FXl"),c=n("TjRS"),r=n("ZFoC"),b=n("WvoA"),d=n("GSNr"),u=n("MWnS"),O=(n("aD51"),{});void 0!==O&&O&&O===Object(O)&&Object.isExtensible(O)&&!O.hasOwnProperty("__filemeta")&&Object.defineProperty(O,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/components/clickOutside.mdx"}});var s={_frontmatter:O},m=c.a;function p(e){var t,n=e.components,p=Object(i.a)(e,["components"]);return Object(o.b)(m,Object(a.a)({},s,p,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"clickoutside"},"ClickOutside"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"ClickOutside")," component is used to detect when the mouse is clicked outside the calendar."),Object(o.b)("p",null,"In the default implementation ",Object(o.b)("inlineCode",{parentName:"p"},"ClickOutside")," is used to determine when to close the ",Object(o.b)("inlineCode",{parentName:"p"},"Calendar")," when rendered inside a ",Object(o.b)("inlineCode",{parentName:"p"},"Popper"),".\nClicks within the ",Object(o.b)("inlineCode",{parentName:"p"},"Calender")," or on the associated inputs should not close the ",Object(o.b)("inlineCode",{parentName:"p"},"Calendar")," but everywhere else should."),Object(o.b)("h2",{id:"example"},"Example"),Object(o.b)("p",null,"In this example when you click the buttons they log whether or not it considers it a click outside the rendered tree.\nIn addition an ignored list of refs can be provided which, when clicked, will not invoke ",Object(o.b)("inlineCode",{parentName:"p"},"onClickOutside"),"."),Object(o.b)(r.c,{__position:0,__code:"() => {\n  const ignoreRef = useRef()\n  const ignoreListRefs = [ignoreRef]\n  function handleClickOutside() {\n    console.log('you clicked outside the component')\n  }\n  return (\n    <>\n      <DemoButtonBar>\n        <DemoButton>Click Outside</DemoButton>\n        <DemoButton ref={ignoreRef}>\n          Click Outside (but in the allow list)\n        </DemoButton>\n      </DemoButtonBar>\n      <ClickOutside\n        onClickOutside={handleClickOutside}\n        ignoreClickOutsideRefs={ignoreListRefs}\n      >\n        <DemoButton>Click Inside</DemoButton>\n      </ClickOutside>\n    </>\n  )\n}",__scope:(t={props:p,DefaultLayout:c.a,useRef:l.useRef,Playground:r.c,ClickOutside:b.a,DemoButton:d.a,DemoButtonBar:u.a},t.DefaultLayout=c.a,t._frontmatter=O,t),mdxType:"Playground"},(function(){var e=Object(l.useRef)(),t=[e];return Object(o.b)(l.Fragment,null,Object(o.b)(u.a,{mdxType:"DemoButtonBar"},Object(o.b)(d.a,{mdxType:"DemoButton"},"Click Outside"),Object(o.b)(d.a,{ref:e,mdxType:"DemoButton"},"Click Outside (but in the allow list)")),Object(o.b)(b.a,{onClickOutside:function(){console.log("you clicked outside the component")},ignoreClickOutsideRefs:t,mdxType:"ClickOutside"},Object(o.b)(d.a,{mdxType:"DemoButton"},"Click Inside")))})),Object(o.b)("h2",{id:"props"},"Props"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Prop Name"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Is Required"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Default Value"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"children"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"node")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"children to monitor for click outside events")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"ignoreClickOutsideRefs"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"array")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Additional array of refs, will ignore click outside from")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"onClickOutside"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"func")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Callback called when the mouse is clicked outside")))))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/components/clickOutside.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-components-click-outside-mdx-8caefa588306b8915804.js.map