{"version":3,"sources":["webpack:///../src/docs/components/animatedMonthGroup.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useState","useRef","Button","Playground","AnimatedMonthGroup","CalendarProvider","dateAdapter","AddYourComponentHere","DemoButton","DemoButtonBar","createDate","addMonths","subtractMonths","visibleFromDate","setVisibleFromDate","column1Ref","groupRef","adapter","numOfColumns","onClick","nextMonth","previousMonth","style","width","firstColumnRef","ref","display","isMDXComponent"],"mappings":"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","file":"component---src-docs-components-animated-month-group-mdx-496f8c38343409d89365.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mark/Documents/dev/use-date-input3/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useState, useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Playground } from \"docz\";\nimport { AnimatedMonthGroup, CalendarProvider } from \"@use-date-input/core\";\nimport { adapter as dateAdapter } from '@use-date-input/date-fns-adapter';\nimport { DemoContent as AddYourComponentHere } from \"../../gatsby-theme-docz/components/DemoContent\";\nimport { DemoButton } from \"../../gatsby-theme-docz/components/DemoButton\";\nimport { DemoButtonBar } from \"../../gatsby-theme-docz/components/DemoButtonBar\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"animatedmonthgroup\"\n    }}>{`AnimatedMonthGroup`}</h1>\n    <p>{`The `}<inlineCode parentName=\"p\">{`AnimatedMonthGroup`}</inlineCode>{` component animates it's children based on the change of the `}<inlineCode parentName=\"p\">{`visibleFromDate`}</inlineCode>{` and refs, applied to the first (`}<inlineCode parentName=\"p\">{`firstColumnRef`}</inlineCode>{`). and last column (`}<inlineCode parentName=\"p\">{`groupRef`}</inlineCode>{`).`}</p>\n    <p>{`In the default implementation, `}<a parentName=\"p\" {...{\n        \"href\": \"https://mark-tate.github.io/use-date-input/animatedMonthGroup\"\n      }}>{`AnimatedMonthGroup`}</a>{` is the parent of `}<inlineCode parentName=\"p\">{`AnimatedMonth`}</inlineCode>{` and is used to manage\nscroll movement between columns based on the changes to `}<inlineCode parentName=\"p\">{`visibleFromDate`}</inlineCode>{`.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const { createDate, addMonths, subtractMonths } = dateAdapter()\\n  const [visibleFromDate, setVisibleFromDate] = useState(createDate())\\n  const column1Ref = useRef()\\n  const groupRef = useRef()\\n  function handleNextMonthClick() {\\n    const nextMonth = addMonths(visibleFromDate, 1)\\n    setVisibleFromDate(nextMonth)\\n  }\\n  function handlePreviousMonthClick() {\\n    const previousMonth = subtractMonths(visibleFromDate, 1)\\n    setVisibleFromDate(previousMonth)\\n  }\\n  function handleNextQuarterClick() {\\n    const nextMonth = addMonths(visibleFromDate, 3)\\n    setVisibleFromDate(nextMonth)\\n  }\\n  function handlePreviousQuarterClick() {\\n    const nextMonth = subtractMonths(visibleFromDate, 3)\\n    setVisibleFromDate(nextMonth)\\n  }\\n  return (\\n    <CalendarProvider adapter={dateAdapter} numOfColumns={3}>\\n      <DemoButtonBar>\\n        <DemoButton onClick={handleNextMonthClick}>Next Month</DemoButton>\\n        <DemoButton onClick={handlePreviousMonthClick}>\\n          Previous Month\\n        </DemoButton>\\n        <DemoButton onClick={handlePreviousQuarterClick}>\\n          Previous Quarter\\n        </DemoButton>\\n        <DemoButton onClick={handleNextQuarterClick}>Next Quarter</DemoButton>\\n      </DemoButtonBar>\\n      <div style={{ width: \\'600px\\' }}>\\n        <AnimatedMonthGroup\\n          firstColumnRef={column1Ref}\\n          groupRef={groupRef}\\n          visibleFromDate={visibleFromDate}\\n        >\\n          <div ref={groupRef}>\\n            <AddYourComponentHere\\n              style={{ display: \\'inline-flex\\' }}\\n              ref={column1Ref}\\n            >\\n              Column 1\\n            </AddYourComponentHere>\\n            <AddYourComponentHere style={{ display: \\'inline-flex\\' }}>\\n              Column 2\\n            </AddYourComponentHere>\\n            <AddYourComponentHere style={{ display: \\'inline-flex\\' }}>\\n              Column 3\\n            </AddYourComponentHere>\\n          </div>\\n        </AnimatedMonthGroup>\\n      </div>\\n    </CalendarProvider>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useState,\n      useRef,\n      Button,\n      Playground,\n      AnimatedMonthGroup,\n      CalendarProvider,\n      dateAdapter,\n      AddYourComponentHere,\n      DemoButton,\n      DemoButtonBar,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const {\n          createDate,\n          addMonths,\n          subtractMonths\n        } = dateAdapter();\n        const [visibleFromDate, setVisibleFromDate] = useState(createDate());\n        const column1Ref = useRef();\n        const groupRef = useRef();\n\n        function handleNextMonthClick() {\n          const nextMonth = addMonths(visibleFromDate, 1);\n          setVisibleFromDate(nextMonth);\n        }\n\n        function handlePreviousMonthClick() {\n          const previousMonth = subtractMonths(visibleFromDate, 1);\n          setVisibleFromDate(previousMonth);\n        }\n\n        function handleNextQuarterClick() {\n          const nextMonth = addMonths(visibleFromDate, 3);\n          setVisibleFromDate(nextMonth);\n        }\n\n        function handlePreviousQuarterClick() {\n          const nextMonth = subtractMonths(visibleFromDate, 3);\n          setVisibleFromDate(nextMonth);\n        }\n\n        return <CalendarProvider adapter={dateAdapter} numOfColumns={3} mdxType=\"CalendarProvider\">\n            <DemoButtonBar mdxType=\"DemoButtonBar\">\n                <DemoButton onClick={handleNextMonthClick} mdxType=\"DemoButton\">Next Month</DemoButton>\n                <DemoButton onClick={handlePreviousMonthClick} mdxType=\"DemoButton\">Previous Month</DemoButton>              \n                <DemoButton onClick={handlePreviousQuarterClick} mdxType=\"DemoButton\">Previous Quarter</DemoButton>\n                <DemoButton onClick={handleNextQuarterClick} mdxType=\"DemoButton\">Next Quarter</DemoButton>\n            </DemoButtonBar>\n            <div style={{\n            width: \"600px\"\n          }}>\n                <AnimatedMonthGroup firstColumnRef={column1Ref} groupRef={groupRef} visibleFromDate={visibleFromDate} mdxType=\"AnimatedMonthGroup\">\n                    <div ref={groupRef}>\n                        <AddYourComponentHere style={{\n                  display: \"inline-flex\"\n                }} ref={column1Ref} mdxType=\"AddYourComponentHere\">Column 1</AddYourComponentHere>\n                        <AddYourComponentHere style={{\n                  display: \"inline-flex\"\n                }} mdxType=\"AddYourComponentHere\">Column 2</AddYourComponentHere>\n                        <AddYourComponentHere style={{\n                  display: \"inline-flex\"\n                }} mdxType=\"AddYourComponentHere\">Column 3</AddYourComponentHere>\n                    </div>\n                </AnimatedMonthGroup>\n            </div>\n        </CalendarProvider>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`children`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`element`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Children`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`firstColumnRef`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Ref to the first column`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`groupRef`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Ref to the MonthGroup`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`visibleFromDate`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`required`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Visible from date, used to control animation between columns and MonthGroup`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"importing\"\n    }}>{`Importing`}</h2>\n    <p>{`It can be imported as either the base component`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { AnimatedMonthGroup } from \"@use-date-input/core\";\n`}</code></pre>\n    <p>{`or as an overridable component that can be replaced through the `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` prop in `}<inlineCode parentName=\"p\">{`CalendarProvider`}</inlineCode>{`.`}<br parentName=\"p\"></br>{`\n`}{`Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://mark-tate.github.io/use-date-input/theming#how-to-replace-ui-components\"\n      }}>{`How to replace UI components`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { CustomisableAnimatedMonthGroup } from \"@use-date-input/core\";\n`}</code></pre>\n    <p>{`If providing your own component, it can be useful to import the base component and use it within your composition.  `}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}