(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"+/g1":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n("Fcif"),l=n("+I+c"),i=n("mXGw"),c=n("/FXl"),o=n("TjRS"),b=n("ZFoC"),r=n("GYKu"),d=n("GSNr"),u=n("MWnS"),s=(n("aD51"),{});void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/components/clickOutside.mdx"}});var O={_frontmatter:s},m=o.a;function p(e){var t,n=e.components,p=Object(l.a)(e,["components"]);return Object(c.b)(m,Object(a.a)({},O,p,{components:n,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"clickoutside"},"ClickOutside"),Object(c.b)("p",null,"The ",Object(c.b)("inlineCode",{parentName:"p"},"ClickOutside")," component is used to detect when the mouse is clicked outside the calendar."),Object(c.b)("p",null,"In the default implementation ",Object(c.b)("inlineCode",{parentName:"p"},"ClickOutside")," is used to determine when to close the ",Object(c.b)("inlineCode",{parentName:"p"},"Calendar")," when rendered inside a ",Object(c.b)("inlineCode",{parentName:"p"},"Popper"),".\nClicks within the ",Object(c.b)("inlineCode",{parentName:"p"},"Calender")," or on the associated inputs should not close the ",Object(c.b)("inlineCode",{parentName:"p"},"Calendar")," but everywhere else should."),Object(c.b)("h2",{id:"example"},"Example"),Object(c.b)("p",null,"In this example when you click the buttons they log whether or not it considers it a click outside the rendered tree.\nIn addition an allow list of refs can be provided which are also classed as not outside the renderd tree."),Object(c.b)(b.c,{__position:0,__code:"() => {\n  const allowRef = useRef()\n  const clickOutsideAllowList = [allowRef]\n  function handleClickOutside() {\n    console.log('you clicked outside the component')\n  }\n  return (\n    <>\n      <DemoButtonBar>\n        <DemoButton>Click Outside</DemoButton>\n        <DemoButton ref={allowRef}>\n          Click Outside (but in the allow list)\n        </DemoButton>\n      </DemoButtonBar>\n      <ClickOutside\n        onClickOutside={handleClickOutside}\n        whitelistRefs={clickOutsideAllowList}\n      >\n        <DemoButton>Click Inside</DemoButton>\n      </ClickOutside>\n    </>\n  )\n}",__scope:(t={props:p,DefaultLayout:o.a,useRef:i.useRef,Playground:b.c,ClickOutside:r.e,DemoButton:d.a,DemoButtonBar:u.a},t.DefaultLayout=o.a,t._frontmatter=s,t),mdxType:"Playground"},(function(){var e=Object(i.useRef)(),t=[e];return Object(c.b)(i.Fragment,null,Object(c.b)(u.a,{mdxType:"DemoButtonBar"},Object(c.b)(d.a,{mdxType:"DemoButton"},"Click Outside"),Object(c.b)(d.a,{ref:e,mdxType:"DemoButton"},"Click Outside (but in the allow list)")),Object(c.b)(r.e,{onClickOutside:function(){console.log("you clicked outside the component")},whitelistRefs:t,mdxType:"ClickOutside"},Object(c.b)(d.a,{mdxType:"DemoButton"},"Click Inside")))})),Object(c.b)("h2",{id:"props"},"Props"),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Prop Name"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Is Required"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Default Value"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"children"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"node")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"children to monitor for click outside events")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"onClickOutside"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"func")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Callback called when the mouse is clicked outside")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"whitelistRefs"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"array")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"optional"),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null})),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"List of additional elements to ignore mouse clicks")))))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/components/clickOutside.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-components-click-outside-mdx-b15fb023311feea1c981.js.map