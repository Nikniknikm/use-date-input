(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{ZyBU:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return y})),a.d(t,"default",(function(){return R}));var n=a("Fcif"),r=a("mK0O"),c=a("+I+c"),i=a("mXGw"),o=a("/FXl"),s=a("TjRS"),l=a("ZFoC"),d=a("UutA"),b=a("GYKu"),u=a("R82R"),p=a("u44p"),m=a("v6vt"),h=a("5bSt"),O=a("9b5V"),j=a("esdE"),f=a("5Wd7"),C=a("PKSg");a("aD51");function g(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function D(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?g(Object(a),!0).forEach((function(t){Object(r.a)(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):g(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var y={};void 0!==y&&y&&y===Object(y)&&Object.isExtensible(y)&&!y.hasOwnProperty("__filemeta")&&Object.defineProperty(y,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/state.mdx"}});var N={_frontmatter:y},v=s.a;function R(e){var t,a,r,g=e.components,R=Object(c.a)(e,["components"]);return Object(o.b)(v,Object(n.a)({},N,R,{components:g,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"state"},"State"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"use-date-input")," comes with a set of default reducers which are composed together to create\nthe state for ",Object(o.b)("inlineCode",{parentName:"p"},"useDateInput"),", ",Object(o.b)("inlineCode",{parentName:"p"},"useDateRangeInput")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Calender"),"."),Object(o.b)("p",null,"You can override the default state or add additional state, whatever your components need, with the ",Object(o.b)("inlineCode",{parentName:"p"},"reducers")," prop.",Object(o.b)("br",{parentName:"p"}),"\n","The ",Object(o.b)("inlineCode",{parentName:"p"},"reducers")," prop can be provided to either ",Object(o.b)("inlineCode",{parentName:"p"},"CalendarProvider")," or ",Object(o.b)("inlineCode",{parentName:"p"},"Calendar"),"."),Object(o.b)("p",null,"In this example we change the selection created by the default reducers, so that it adds 1 week to any date that is selected.",Object(o.b)("br",{parentName:"p"}),"\n","Any part of the default state can be modified in this way."),Object(o.b)(l.c,{__position:0,__code:'() => {\n  // import { Calendar, calendarReducer, calendarActions, singleDateReducer } from "@use-date-input/core";\n  // import dateAdapter from "@use-date-input/date-fns-adapter";\n  function handleStateChange(newState, changes) {\n    console.log(\'new state\', newState.startDate, changes)\n  }\n  const myReducer = (state, action, dateAPI) => {\n    if (action.type === calendarActions.selectDate) {\n      return { ...state, startDate: dateAPI.addWeeks(state.startDate, 1) }\n    }\n    return state\n  }\n  return (\n    <Calendar\n      adapter={dateAdapter}\n      reducers={[calendarReducer, singleDateReducer, myReducer]}\n      onStateChange={handleStateChange}\n    />\n  )\n}',__scope:(t={props:R,DefaultLayout:s.a,useRef:i.useRef,useState:i.useState,useDocs:l.i,Link:l.b,Playground:l.c,styled:d.b,calendarActions:b.o,calendarReducer:b.p,createDateAPI:b.q,Calendar:b.c,CalendarProvider:b.d,Day:b.f,useCalendarDispatch:b.s,useCalendarState:b.u,singleDateReducer:b.r,Root:b.l,makeStyles:u.a,List:p.a,ListItem:m.a,ListItemText:h.a,dateAdapter:O.a,getDay:j.a,eachDayOfInterval:f.a,sampleTheme:C.a},t.DefaultLayout=s.a,t._frontmatter=y,t),mdxType:"Playground"},(function(){return Object(o.b)(b.c,{adapter:O.a,reducers:[b.p,b.r,function(e,t,a){return t.type===b.o.selectDate?D(D({},e),{},{startDate:a.addWeeks(e.startDate,1)}):e}],onStateChange:function(e,t){console.log("new state",e.startDate,t)},mdxType:"Calendar"})})),Object(o.b)("h2",{id:"default-reducers"},"Default Reducers"),Object(o.b)("p",null,"A brief description of the default reducers."),Object(o.b)("h3",{id:"calendarreducer"},"calendarReducer"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import { calendarReducer, calendarActions } from "@use-date-input/core";\n')),Object(o.b)("p",null,"Creates the state for a stand-alone ",Object(o.b)("inlineCode",{parentName:"p"},"Calendar")," with no associated input.  "),Object(o.b)("p",null,"Associated actions :  "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"focusDate - Focus a specific date"),Object(o.b)("li",{parentName:"ul"},"keyPress - Keyboard action"),Object(o.b)("li",{parentName:"ul"},"mouseClickOutside - Mouse clicked outside of Calendar (or allow list)"),Object(o.b)("li",{parentName:"ul"},"navigatePrevious - Navigate to the previous month"),Object(o.b)("li",{parentName:"ul"},"navigateNext - Navigate to the next month"),Object(o.b)("li",{parentName:"ul"},"selectDate - Select a date (emulating keyboard or mouse selection)"),Object(o.b)("li",{parentName:"ul"},"setAnimating - Create the transient state of animating between dates (used to prevent interim selection)"),Object(o.b)("li",{parentName:"ul"},"setEnableKeyboardNavigation - Enable the navigation of the ",Object(o.b)("inlineCode",{parentName:"li"},"Calendar")," cursor with the keyboard controls"),Object(o.b)("li",{parentName:"ul"},"setEndDate - Create an end date for a date range (programatically)"),Object(o.b)("li",{parentName:"ul"},"setFocusableDate - Enable/Disable focusable dates within the ",Object(o.b)("inlineCode",{parentName:"li"},"Calendar")," "),Object(o.b)("li",{parentName:"ul"},"setKeyboardCursor - Set the keyboard cursor within the ",Object(o.b)("inlineCode",{parentName:"li"},"Calendar")," "),Object(o.b)("li",{parentName:"ul"},"setMouseCursor - Set the mouse cursor within the ",Object(o.b)("inlineCode",{parentName:"li"},"Calendar")," "),Object(o.b)("li",{parentName:"ul"},"setStartDate - Create an start date for a date range (programatically)"),Object(o.b)("li",{parentName:"ul"},"setOpen - Open the visible state of the ",Object(o.b)("inlineCode",{parentName:"li"},"Calendar")),Object(o.b)("li",{parentName:"ul"},"setVisibleFromDate - Set the initial visible month")),Object(o.b)("h3",{id:"singledatereducer"},"singleDateReducer"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import { singleDateReducer, calendarActions } from "@use-date-input/core";\n')),Object(o.b)("p",null,"When combined with the ",Object(o.b)("inlineCode",{parentName:"p"},"singleDateReducer")," it selects single dates.  "),Object(o.b)("p",null,"Associated actions :  "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Uses the ",Object(o.b)("inlineCode",{parentName:"li"},"calendarReducer")," actions")),Object(o.b)("h3",{id:"daterangereducer"},"dateRangeReducer"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import { dateRangeReducer, calendarActions } from "@use-date-input/core";\n')),Object(o.b)("p",null,"When combined with the ",Object(o.b)("inlineCode",{parentName:"p"},"calendarReducer")," it selects a date range.   "),Object(o.b)("p",null,"Associated actions :  "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Uses the ",Object(o.b)("inlineCode",{parentName:"li"},"calendarReducer")," actions")),Object(o.b)("h3",{id:"dateinputreducer"},"dateInputReducer"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import { dateInputReducer, dateInputActions } from "@use-date-input/core";\n')),Object(o.b)("p",null,"Combines with ",Object(o.b)("inlineCode",{parentName:"p"},"calendarReducer")," to select a single date from either the ",Object(o.b)("inlineCode",{parentName:"p"},"Calendar")," or an input."),Object(o.b)("p",null,"Associated actions :  "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"blurInput : Blur the associated input's focus"),Object(o.b)("li",{parentName:"ul"},"focusInput : Focus the associated input"),Object(o.b)("li",{parentName:"ul"},"focusLock : Enable/Disable the focus lock, so that tabbing behaviour links both input and ",Object(o.b)("inlineCode",{parentName:"li"},"Calendar"))),Object(o.b)("h3",{id:"daterangeinputreducer"},"dateRangeInputReducer"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import { dateRangeInputReducer, dateRangeInputActions, dateRangeInputType } from "@use-date-input/core";\n')),Object(o.b)("p",null,"Combines with ",Object(o.b)("inlineCode",{parentName:"p"},"calendarReducer")," to select a date range from either the ",Object(o.b)("inlineCode",{parentName:"p"},"Calendar")," or 2 inputs, representing the start and end date.  "),Object(o.b)("p",null,"Associated actions :  "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"blurStartDate : Blur the associated input's focus"),Object(o.b)("li",{parentName:"ul"},"blurEndDate : Blur the associated input's focus"),Object(o.b)("li",{parentName:"ul"},"focusStartDate : Focus the associated input"),Object(o.b)("li",{parentName:"ul"},"focusEndDate : Focus the associated input"),Object(o.b)("li",{parentName:"ul"},"focusLock : Enable/Disable the focus lock, so that tabbing behaviour links both input and ",Object(o.b)("inlineCode",{parentName:"li"},"Calendar"))),Object(o.b)("h2",{id:"reading-state"},"Reading State"),Object(o.b)("p",null,"Providing an ",Object(o.b)("inlineCode",{parentName:"p"},"onStateChange")," callback to the ",Object(o.b)("inlineCode",{parentName:"p"},"CalendarProvider")," enables you to respond to state change."),Object(o.b)("p",null,"In this example, ",Object(o.b)("inlineCode",{parentName:"p"},"state")," and ",Object(o.b)("inlineCode",{parentName:"p"},"changes")," are logged to the console."),Object(o.b)(l.c,{__position:1,__code:'() => {\n  // import { Calendar } from "@use-date-input/core";\n  // import dateAdapter from "@use-date-input/date-fns-adapter";\n  function handleStateChange(newState, changes) {\n    console.log(\'new state\', newState, changes)\n  }\n  return <Calendar adapter={dateAdapter} onStateChange={handleStateChange} />\n}',__scope:(a={props:R,DefaultLayout:s.a,useRef:i.useRef,useState:i.useState,useDocs:l.i,Link:l.b,Playground:l.c,styled:d.b,calendarActions:b.o,calendarReducer:b.p,createDateAPI:b.q,Calendar:b.c,CalendarProvider:b.d,Day:b.f,useCalendarDispatch:b.s,useCalendarState:b.u,singleDateReducer:b.r,Root:b.l,makeStyles:u.a,List:p.a,ListItem:m.a,ListItemText:h.a,dateAdapter:O.a,getDay:j.a,eachDayOfInterval:f.a,sampleTheme:C.a},a.DefaultLayout=s.a,a._frontmatter=y,a),mdxType:"Playground"},(function(){return Object(o.b)(b.c,{adapter:O.a,onStateChange:function(e,t){console.log("new state",e,t)},mdxType:"Calendar"})})),Object(o.b)("h2",{id:"changing-state"},"Changing State"),Object(o.b)("p",null,"In addition to the reducers, state can be modified via the ",Object(o.b)("inlineCode",{parentName:"p"},"useCalendarDispatch")," hook or an ",Object(o.b)("inlineCode",{parentName:"p"},"actions")," ref."),Object(o.b)("h3",{id:"usecalendardispatch"},"useCalendarDispatch"),Object(o.b)("p",null,"Actions can be dispatched via an API returned by the ",Object(o.b)("inlineCode",{parentName:"p"},"useCalendarDispatch")," hook.  "),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"useCalendarDispatch")," can be used in any child of ",Object(o.b)("inlineCode",{parentName:"p"},"CalendarProvider"),".  "),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"const {\n    dispatch,\n    mouseClickOutside,\n    navigateNext,\n    navigatePrevious,\n    selectDate,\n    setAnimating,\n    setEnableKeyboardNavigation,\n    setKeyboardCursor,\n    setMouseCursor,\n    setEndDate,\n    setStartDate,\n    setOpen,\n    setKeyPress,\n    setVisibleFromDate\n} = useCalendarDispatch();\n")),Object(o.b)("p",null,"Use ",Object(o.b)("inlineCode",{parentName:"p"},"dispatch")," or use the helper functions, which wrap the dispatch method, they are equivalent.  "),Object(o.b)("p",null,"Refer to the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://mark-tate.github.io/use-date-input/useCalendarDispatch"}),"useCalendarDispatch")," docs for examples."),Object(o.b)("h3",{id:"actions-ref"},"Actions Ref"),Object(o.b)("p",null,"Providing an ",Object(o.b)("inlineCode",{parentName:"p"},"actions")," ref to the ",Object(o.b)("inlineCode",{parentName:"p"},"CalendarProvider")," enables you to control the Component state externally using either the helper functions or the dispatcher itself."),Object(o.b)("p",null,"The ref will be assigned the ",Object(o.b)("inlineCode",{parentName:"p"},"useCalendarDispatch")," API that enables you to modify the state."),Object(o.b)("p",null,"An ",Object(o.b)("inlineCode",{parentName:"p"},"actions")," ref can be used anywhere, even outside the ",Object(o.b)("inlineCode",{parentName:"p"},"CalendarProvider")," hierachy and unlike the hook ",Object(o.b)("inlineCode",{parentName:"p"},"useCalendarDispatch")," can be called, as and when needed.  "),Object(o.b)("p",null,"In this example, the date range is created by setting the endDate, upon selection of the start date. "),Object(o.b)(l.c,{__position:2,__code:'() => {\n  // import { useRef, useState } from "react";\n  // import { Calendar, CalendarProvider } from "@use-date-input/core";\n  // imprt dateAdapter from "@use-date-input/date-fns-adapter";\n  const [storeDate, setStoreDate] = useState()\n  const actions = useRef()\n  function handleCalendarChange(value) {\n    const [rangeStart, rangeEnd] = value\n    const { setStartDate, setEndDate, dateAPI } = actions.current\n    if (!dateAPI.isSameDay(storeDate, rangeStart)) {\n      const endDate = dateAPI.addWeeks(rangeStart, 1)\n      setEndDate(endDate)\n      setStoreDate(rangeStart)\n    }\n  }\n  return (\n    <CalendarProvider\n      actions={actions}\n      adapter={dateAdapter}\n      allowRange\n      onCalendarChange={handleCalendarChange}\n    >\n      <Calendar />\n    </CalendarProvider>\n  )\n}',__scope:(r={props:R,DefaultLayout:s.a,useRef:i.useRef,useState:i.useState,useDocs:l.i,Link:l.b,Playground:l.c,styled:d.b,calendarActions:b.o,calendarReducer:b.p,createDateAPI:b.q,Calendar:b.c,CalendarProvider:b.d,Day:b.f,useCalendarDispatch:b.s,useCalendarState:b.u,singleDateReducer:b.r,Root:b.l,makeStyles:u.a,List:p.a,ListItem:m.a,ListItemText:h.a,dateAdapter:O.a,getDay:j.a,eachDayOfInterval:f.a,sampleTheme:C.a},r.DefaultLayout=s.a,r._frontmatter=y,r),mdxType:"Playground"},(function(){var e=Object(i.useState)(),t=e[0],a=e[1],n=Object(i.useRef)();return Object(o.b)(b.d,{actions:n,adapter:O.a,allowRange:!0,onCalendarChange:function(e){var r=e[0],c=(e[1],n.current),i=(c.setStartDate,c.setEndDate),o=c.dateAPI;o.isSameDay(t,r)||(i(o.addWeeks(r,1)),a(r))},mdxType:"CalendarProvider"},Object(o.b)(b.c,{mdxType:"Calendar"}))})))}void 0!==R&&R&&R===Object(R)&&Object.isExtensible(R)&&!R.hasOwnProperty("__filemeta")&&Object.defineProperty(R,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/state.mdx"}}),R.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-state-mdx-b18c326cfa2971f31a0d.js.map