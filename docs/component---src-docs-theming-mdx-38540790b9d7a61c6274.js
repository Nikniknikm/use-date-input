(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{n1AX:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return b})),n.d(t,"default",(function(){return O}));var a=n("Fcif"),o=n("+I+c"),r=(n("mXGw"),n("/FXl")),p=n("TjRS"),i=n("ZFoC"),l=n("UutA"),m=n("GYKu"),s=n("esdE"),u=n("5Wd7"),d=n("9jhi"),c=n("PKSg"),b=(n("aD51"),{});void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/theming.mdx"}});var h={_frontmatter:b},f=p.a;function O(e){var t,n,O=e.components,y=Object(o.a)(e,["components"]);return Object(r.b)(f,Object(a.a)({},h,y,{components:O,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"theming"},"Theming"),Object(r.b)("p",null,"Your theme defines your brand, so ",Object(r.b)("inlineCode",{parentName:"p"},"use-date-input")," components are naked, with just minimal layout styles.  "),Object(r.b)("p",null,"Instead ",Object(r.b)("inlineCode",{parentName:"p"},"use-date-input")," provides a comphrensive approach to theming, enabling you to replace, either the style or\nthe component, for every ",Object(r.b)("inlineCode",{parentName:"p"},"use-date-input")," element."),Object(r.b)("p",null,"Using the ",Object(r.b)("inlineCode",{parentName:"p"},"theme")," prop, go from the default styles"),Object(r.b)(i.c,{__position:0,__code:"<Calendar adapter={dateAdapter} numOfColumns={2} numOfVisibleMonths={2} />",__scope:(t={props:y,DefaultLayout:p.a,useDocs:i.i,Link:i.b,Playground:i.c,styled:l.b,Day:m.e,Calendar:m.c,getDay:s.a,eachDayOfInterval:u.a,dateAdapter:d.b,sampleTheme:c.a},t.DefaultLayout=p.a,t._frontmatter=b,t),mdxType:"Playground"},Object(r.b)(m.c,{adapter:d.b,numOfColumns:2,numOfVisibleMonths:2,mdxType:"Calendar"})),Object(r.b)("p",null,"to this, with just one ",Object(r.b)("inlineCode",{parentName:"p"},"theme")," prop"),Object(r.b)(i.c,{__position:1,__code:"<Calendar\n  adapter={dateAdapter}\n  numOfColumns={2}\n  numOfVisibleMonths={2}\n  theme={sampleTheme}\n/>",__scope:(n={props:y,DefaultLayout:p.a,useDocs:i.i,Link:i.b,Playground:i.c,styled:l.b,Day:m.e,Calendar:m.c,getDay:s.a,eachDayOfInterval:u.a,dateAdapter:d.b,sampleTheme:c.a},n.DefaultLayout=p.a,n._frontmatter=b,n),mdxType:"Playground"},Object(r.b)(m.c,{adapter:d.b,numOfColumns:2,numOfVisibleMonths:2,theme:c.a,mdxType:"Calendar"})),Object(r.b)("h2",{id:"create-your-own-theme"},"Create Your Own Theme"),Object(r.b)("p",null,"Built upon ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"%22https://styled-components.com%22"}),"styled-components")," each element of ",Object(r.b)("inlineCode",{parentName:"p"},"use-date-input")," is\nthemable by overriding/etending the default style.  "),Object(r.b)("p",null,"If you want to style the default components then create a new theme, using the ",Object(r.b)("inlineCode",{parentName:"p"},"theme")," prop.  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'// import { Calendar } from "@use-date-input/core";\n// import { adapter as dateAdapter } from "@use-date-input/date-fns-adapter";\n\nconst yourTheme = {\n    AnimatedGroup: { /* Overidden component style */ },,\n    AnimatedMonthGroup: {},\n    Day: {},\n    DayOfWeek: {},\n    Header: {},\n    MonthCell: {},\n    MonthGroup: {},\n    MonthTitle: {},\n    Month: {},\n    MonthHeader: {},\n    NextButton: {},\n    PreviousButton: {},\n    Root: {},\n    YearTitle: {},\n    Week: {},\n    WeekHeader: {},\n    WeekRow: {},\n};\n\nfunction ThemedCalendar(props) {\n    return (\n        <Calendar\n            adapter={dateAdapter}\n            theme={yourTheme}\n            {...props}\n        />\n    );\n}\n')),Object(r.b)("p",null,"Refer to ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/mark-tate/use-date-input/blob/master/stories/sampleTheme.js"}),"sampleTheme.js")," from the repo for a further example."),Object(r.b)("p",null,"If using ",Object(r.b)("inlineCode",{parentName:"p"},"input")," components with the ",Object(r.b)("inlineCode",{parentName:"p"},"useDateInput/useDateRangeInput")," hooks, then simply style the elements yourself, before\ncomposing with ",Object(r.b)("inlineCode",{parentName:"p"},"Calendar"),"."))}void 0!==O&&O&&O===Object(O)&&Object.isExtensible(O)&&!O.hasOwnProperty("__filemeta")&&Object.defineProperty(O,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/theming.mdx"}}),O.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-theming-mdx-38540790b9d7a61c6274.js.map