{"version":3,"sources":["webpack:///../src/docs/components/calendar.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","styled","useState","Playground","Calendar","Day","isWeekend","createDate","dateAdapter","getDay","eachDayOfInterval","adapter","numOfColumns","numOfVisibleMonths","allowRange","initialSelectedDate","initialVisibleFromMonth","onChange","selectedDate","console","log","disableWeekendProps","day","disabled","undefined","weekOffset","UnavailableDay","background","backgroundRepeat","backgroundPosition","backgroundSize","style","cursor","isDayDisabled","date","isRangeValid","startDate","endDate","start","end","some","interval","isMDXComponent"],"mappings":"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","file":"component---src-docs-components-calendar-mdx-e4df2a7b28207443e35d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mark/Documents/dev/use-date-input3/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport { Playground } from \"docz\";\nimport { default as Calendar } from \"@/core/src/Calendar\";\nimport { Day } from \"@use-date-input/core\";\nimport isWeekend from \"date-fns/isWeekend\";\nimport { createDate, dateAdapter } from \"../../gatsby-theme-docz/createDate\";\nimport getDay from \"date-fns/getDay\";\nimport eachDayOfInterval from \"date-fns/eachDayOfInterval\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst UnavailableDay = makeShortcode(\"UnavailableDay\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"calendar\"\n    }}>{`Calendar`}</h1>\n    <p>{`A`}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` can be used inline on a page and is also used by the `}<inlineCode parentName=\"p\">{`useDateInput`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`useDateRangeInput`}</inlineCode>{` hooks.  `}</p>\n    <p>{`Alternatively you could use to compose your own date picker components.`}</p>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Prop Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Is Required`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default Value`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`adapter`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Date API adapter`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`allowRange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`bool`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When `}<inlineCode parentName=\"td\">{`true`}</inlineCode>{` will select a date range`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`clickOutsideWhiteList`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`array`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`[]`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Array of refs to ignore clicks, when determining whether the user clicked outside the Calendar`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`initialSelectedDate`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`object or array`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The initial selectedDate (for un-controlled use-case)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`initialVisibleFromMonth`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The initial visible from calendar month (unless date is set)`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isDayDisabled`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Callback to set days as disabled   @param day - Date to check        @returns true when disabled`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`isRangeValid`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Callback to determine whether the current selection is valid   @param day - startDate    @param day - endDate        @returns true when valid`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`numOfColumns`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`1`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Number of columns`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`numOfVisibleMonths`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`1`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Number of visible months`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Selected date change handler`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onStateChange`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`func`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`State change handler`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`reducers`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`array of funcs`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Reducer(s), to override default state`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`theme`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`object`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Theme`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`weekOffset`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`optional`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`0`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Start of week offset from date API's default`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"single-date\"\n    }}>{`Single Date`}</h2>\n    <p>{`By default the `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` will select single dates.`}</p>\n    <Playground __position={0} __code={'<Calendar adapter={dateAdapter} numOfColumns={4} numOfVisibleMonths={12} />'} __scope={{\n      props,\n      DefaultLayout,\n      styled,\n      useState,\n      Playground,\n      Calendar,\n      Day,\n      isWeekend,\n      createDate,\n      dateAdapter,\n      getDay,\n      eachDayOfInterval,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Calendar adapter={dateAdapter} numOfColumns={4} numOfVisibleMonths={12} mdxType=\"Calendar\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"date-range\"\n    }}>{`Date Range`}</h2>\n    <p>{`Using the `}<inlineCode parentName=\"p\">{`allowRange`}</inlineCode>{` prop the `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` will select date ranges.`}</p>\n    <Playground __position={1} __code={'<Calendar\\n  adapter={dateAdapter}\\n  allowRange\\n  numOfColumns={4}\\n  numOfVisibleMonths={12}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      styled,\n      useState,\n      Playground,\n      Calendar,\n      Day,\n      isWeekend,\n      createDate,\n      dateAdapter,\n      getDay,\n      eachDayOfInterval,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Calendar adapter={dateAdapter} allowRange numOfColumns={4} numOfVisibleMonths={12} mdxType=\"Calendar\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"setting-initial-state\"\n    }}>{`Setting Initial State`}</h2>\n    <p>{`The basic component operates as un-controlled, although the reducer pattern enables you to control the final state.`}<br parentName=\"p\"></br>{`\n`}{`This example shows the basic use-case of the initial state.`}</p>\n    <Playground __position={2} __code={'() => {\\n  const handleChange = selectedDate => {\\n    console.log(\\'changed selected date\\', selectedDate)\\n  }\\n  return (\\n    <Calendar\\n      adapter={dateAdapter}\\n      initialSelectedDate={createDate(\\'2020-02-20\\')}\\n      initialVisibleFromMonth={createDate(\\'2020-02-01\\')}\\n      numOfVisibleMonths={12}\\n      numOfColumns={3}\\n      onChange={handleChange}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      styled,\n      useState,\n      Playground,\n      Calendar,\n      Day,\n      isWeekend,\n      createDate,\n      dateAdapter,\n      getDay,\n      eachDayOfInterval,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const handleChange = selectedDate => {\n          console.log(\"changed selected date\", selectedDate);\n        };\n\n        return <Calendar adapter={dateAdapter} initialSelectedDate={createDate(\"2020-02-20\")} initialVisibleFromMonth={createDate(\"2020-02-01\")} numOfVisibleMonths={12} numOfColumns={3} onChange={handleChange} mdxType=\"Calendar\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"custom-day-renderers\"\n    }}>{`Custom Day Renderers`}</h2>\n    <p>{`Add your own renderers for `}<inlineCode parentName=\"p\">{`Day`}</inlineCode>{`, to render specific date states with your own styles, using the `}<inlineCode parentName=\"p\">{`ccomponents`}</inlineCode>{` prop.  `}</p>\n    <Playground __position={3} __code={'() => {\\n  /** Add your own renderer(s) for Days to show your required state */\\n  function JustWeekdaysRenderer(props) {\\n    const disableWeekendProps = isWeekend(props.day) && {\\n      disabled: true,\\n      day: undefined,\\n    }\\n    return <Day {...props} {...disableWeekendProps} />\\n  }\\n  const handleChange = selectedDate => {\\n    console.log(\\'changed selected date\\', selectedDate)\\n  }\\n  return (\\n    <Calendar\\n      adapter={dateAdapter}\\n      allowRange\\n      components={{\\n        Day: JustWeekdaysRenderer,\\n      }}\\n      onChange={handleChange}\\n      numOfVisibleMonths={12}\\n      numOfColumns={4}\\n      weekOffset={1}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      styled,\n      useState,\n      Playground,\n      Calendar,\n      Day,\n      isWeekend,\n      createDate,\n      dateAdapter,\n      getDay,\n      eachDayOfInterval,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        /** Add your own renderer(s) for Days to show your required state */\n        function JustWeekdaysRenderer(props) {\n          const disableWeekendProps = isWeekend(props.day) && {\n            disabled: true,\n            day: undefined\n          };\n          return <Day {...props} {...disableWeekendProps} mdxType=\"Day\" />;\n        }\n\n        const handleChange = selectedDate => {\n          console.log(\"changed selected date\", selectedDate);\n        };\n\n        return <Calendar adapter={dateAdapter} allowRange components={{\n          Day: JustWeekdaysRenderer\n        }} onChange={handleChange} numOfVisibleMonths={12} numOfColumns={4} weekOffset={1} mdxType=\"Calendar\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"block-dates\"\n    }}>{`Block dates`}</h2>\n    <p>{`Block out dates using a custom renderer and the `}<inlineCode parentName=\"p\">{`isDayDisabled`}</inlineCode>{` prop.  `}</p>\n    <Playground __position={4} __code={'() => {\\n  const UnavailableDay = styled(Day)(props => ({\\n    background: \\'url(\\\"/public/cross.svg\\\")\\',\\n    backgroundRepeat: \\'no-repeat\\',\\n    backgroundPosition: \\'bottom 6px right 5px\\',\\n    backgroundSize: \\'50% 50%, auto\\',\\n  }))\\n  const isMonday = date => getDay(date) === 1\\n  function BlockoutMondaysRenderer(props) {\\n    if (getDay(props.day) === 1) {\\n      return (\\n        <span style={{ cursor: \\'not-allowed\\' }}>\\n          <UnavailableDay {...props} disabled />\\n        </span>\\n      )\\n    }\\n    return <Day {...props} />\\n  }\\n  return (\\n    <Calendar\\n      adapter={dateAdapter}\\n      components={{\\n        Day: BlockoutMondaysRenderer,\\n      }}\\n      isDayDisabled={isMonday}\\n      numOfVisibleMonths={12}\\n      numOfColumns={4}\\n      weekOffset={1}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      styled,\n      useState,\n      Playground,\n      Calendar,\n      Day,\n      isWeekend,\n      createDate,\n      dateAdapter,\n      getDay,\n      eachDayOfInterval,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const UnavailableDay = styled(Day)(props => ({\n          background: 'url(\"/public/cross.svg\")',\n          backgroundRepeat: \"no-repeat\",\n          backgroundPosition: \"bottom 6px right 5px\",\n          backgroundSize: \"50% 50%, auto\"\n        }));\n\n        const isMonday = date => getDay(date) === 1;\n\n        function BlockoutMondaysRenderer(props) {\n          if (getDay(props.day) === 1) {\n            return <span style={{\n              cursor: \"not-allowed\"\n            }}>\n                    <UnavailableDay {...props} disabled mdxType=\"UnavailableDay\" />\n                </span>;\n          }\n\n          return <Day {...props} mdxType=\"Day\" />;\n        }\n\n        return <Calendar adapter={dateAdapter} components={{\n          Day: BlockoutMondaysRenderer\n        }} isDayDisabled={isMonday} numOfVisibleMonths={12} numOfColumns={4} weekOffset={1} mdxType=\"Calendar\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"validate-date-ranges\"\n    }}>{`Validate Date Ranges`}</h2>\n    <p>{`Validate date ranges with your own rules using the `}<inlineCode parentName=\"p\">{`isRangeValid`}</inlineCode>{` prop.  `}</p>\n    <Playground __position={5} __code={'() => {\\n  /** Add your own validators to validate ranges */\\n  const doesNotOverlapWeekendValidator = (startDate, endDate) => {\\n    if (!startDate || !endDate || startDate === endDate) {\\n      return true\\n    }\\n    const overlapsWeekend = eachDayOfInterval({\\n      start: startDate,\\n      end: endDate,\\n    }).some(interval => {\\n      return isWeekend(interval)\\n    })\\n    return !overlapsWeekend\\n  }\\n  const handleChange = selectedDate => {\\n    console.log(\\'changed selected date\\', selectedDate)\\n  }\\n  return (\\n    <Calendar\\n      adapter={dateAdapter}\\n      allowRange\\n      isRangeValid={doesNotOverlapWeekendValidator}\\n      onChange={handleChange}\\n      numOfVisibleMonths={12}\\n      numOfColumns={4}\\n      weekOffset={1}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      styled,\n      useState,\n      Playground,\n      Calendar,\n      Day,\n      isWeekend,\n      createDate,\n      dateAdapter,\n      getDay,\n      eachDayOfInterval,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        /** Add your own validators to validate ranges */\n        const doesNotOverlapWeekendValidator = (startDate, endDate) => {\n          if (!startDate || !endDate || startDate === endDate) {\n            return true;\n          }\n\n          const overlapsWeekend = eachDayOfInterval({\n            start: startDate,\n            end: endDate\n          }).some(interval => {\n            return isWeekend(interval);\n          });\n          return !overlapsWeekend;\n        };\n\n        const handleChange = selectedDate => {\n          console.log(\"changed selected date\", selectedDate);\n        };\n\n        return <Calendar adapter={dateAdapter} allowRange isRangeValid={doesNotOverlapWeekendValidator} onChange={handleChange} numOfVisibleMonths={12} numOfColumns={4} weekOffset={1} mdxType=\"Calendar\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}