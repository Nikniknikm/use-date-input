(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{IfrJ:function(e,a,t){"use strict";t.r(a),t.d(a,"_frontmatter",(function(){return i})),t.d(a,"default",(function(){return D}));var n=t("Fcif"),r=t("+I+c"),o=t("mXGw"),d=t("/FXl"),l=t("TjRS"),s=t("ZFoC"),c=t("GYKu"),b=t("Tmbg"),p=t("9b5V"),i=(t("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/hooks/useCalendarProps.mdx"}});u="DateLabel";var u,m={_frontmatter:i},f=l.a;function D(e){var a,t=e.components,u=Object(r.a)(e,["components"]);return Object(d.b)(f,Object(n.a)({},m,u,{components:t,mdxType:"MDXLayout"}),Object(d.b)("h1",{id:"usecalendarprops"},"useCalendarProps"),Object(d.b)("p",null,Object(d.b)("inlineCode",{parentName:"p"},"useCalendarProps")," is a hook which will provide the props provided to ",Object(d.b)("inlineCode",{parentName:"p"},"CalendarProvider"),"."),Object(d.b)(s.c,{__position:0,__code:"() => {\n  const [selectedDate, setSelectedDate] = useState()\n  const DateLabel = ({ selectedDate }) => {\n    const { format, getDateFormat } = useDateAPI()\n    const props = useCalendarProps()\n    let dateLabel = 'Select A Date'\n    if (selectedDate) {\n      const formatter = getDateFormat(formatNames.ARIA_DAY_LABEL)\n      dateLabel = format(selectedDate, formatter)\n    }\n    return (\n      <>\n        <i>{props.myExtraLabel}</i>\n        <p>{dateLabel}</p>\n      </>\n    )\n  }\n  return (\n    <CalendarProvider\n      adapter={dateAdapter}\n      onCalendarChange={setSelectedDate}\n      myExtraLabel={\n        'Add any additonal props you need and access them with useCalendarProps'\n      }\n    >\n      <DateLabel selectedDate={selectedDate} />\n      <Calendar />\n    </CalendarProvider>\n  )\n}",__scope:(a={props:u,DefaultLayout:l.a,useState:o.useState,Playground:s.c,useDateAPI:c.k,useCalendarProps:c.i,Calendar:c.a,CalendarProvider:c.b,formatNames:b.a,dateAdapter:p.a},a.DefaultLayout=l.a,a._frontmatter=i,a),mdxType:"Playground"},(function(){var e=Object(o.useState)(),a=e[0],t=e[1];return Object(d.b)(c.b,{adapter:p.a,onCalendarChange:t,myExtraLabel:"Add any additonal props you need and access them with useCalendarProps",mdxType:"CalendarProvider"},Object(d.b)((function(e){var a=e.selectedDate,t=Object(c.k)(),n=t.format,r=t.getDateFormat,l=Object(c.i)(),s="Select A Date";a&&(s=n(a,r(b.a.ARIA_DAY_LABEL)));return Object(d.b)(o.Fragment,null,Object(d.b)("i",null,l.myExtraLabel),Object(d.b)("p",null,s))}),{selectedDate:a,mdxType:"DateLabel"}),Object(d.b)(c.a,{mdxType:"Calendar"}))})))}void 0!==D&&D&&D===Object(D)&&Object.isExtensible(D)&&!D.hasOwnProperty("__filemeta")&&Object.defineProperty(D,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/hooks/useCalendarProps.mdx"}}),D.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-hooks-use-calendar-props-mdx-94198e7193f26ded1d57.js.map