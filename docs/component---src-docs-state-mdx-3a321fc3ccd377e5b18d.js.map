{"version":3,"sources":["webpack:///../src/docs/state.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","useRef","useState","useDocs","Link","Playground","styled","createDateAPI","Calendar","CalendarProvider","Day","useCalendarDispatch","useCalendarState","Root","makeStyles","List","ListItem","ListItemText","dateAdapter","getDay","eachDayOfInterval","sampleTheme","ShortcutList","dateAPI","adapter","useStyles","theme","root","backgroundColor","palette","background","paper","color","primary","main","display","marginTop","verticalAlign","width","startDate","setEndDate","setVisibleFromDate","classes","createNightsSelectHandler","numOfNights","addDays","startOfMonth","handleTenNights","handleSevenNights","handleThreeNights","className","component","dense","aria-label","button","onClick","allowRange","numOfVisibleMonths","numOfColumns","storeDate","setStoreDate","actions","onCalendarChange","value","rangeStart","current","setStartDate","isSameDay","addWeeks","onStateChange","newState","changes","console","log","isMDXComponent"],"mappings":"4XAkBaA,G,UAAe,S,oMAENC,EAKa,eALnC,IAAsBA,EAMhBC,EAAc,CAClBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAK5E,iBAAQ,CACN,GAAM,SADR,SAGA,iBAAQ,CACN,GAAM,YADR,YAGA,qCAAoB,0BAAYC,WAAW,KAAvB,kBAApB,kJAEA,qBAAG,0BAAYA,WAAW,KAAvB,kBAAH,gGACY,0BAAYA,WAAW,KAAvB,gBADZ,KAC0E,0BAAYA,WAAW,KAAvB,qBAD1E,QACgJ,0BAAYA,WAAW,KAAvB,YADhJ,KAEA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,kBAAsC,kBAAIA,WAAW,MAArD,4CACkC,0BAAYA,WAAW,KAAvB,YADlC,2DAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sCAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,+BAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0EAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8CAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,uEAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,6GAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8DAAkF,0BAAYA,WAAW,KAAvB,YAAlF,uCAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,uEAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gEAAoF,0BAAYA,WAAW,KAAvB,YAApF,MAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,0DAA8E,0BAAYA,WAAW,KAAvB,YAA9E,MAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oDAAwE,0BAAYA,WAAW,KAAvB,YAAxE,MAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2EAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,2CAA+D,0BAAYA,WAAW,KAAvB,cAEjE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,uDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oCACQ,0BAAYA,WAAW,KAAvB,mBADR,gCAGF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mCACQ,0BAAYA,WAAW,KAAvB,mBADR,6BAGF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mBAAuC,kBAAIA,WAAW,MAAtD,sBACY,0BAAYA,WAAW,KAAvB,mBADZ,4CACoH,0BAAYA,WAAW,KAAvB,YADpH,wCAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,kDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,4CAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,6FAAiH,0BAAYA,WAAW,KAAvB,cAEnH,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,wCACQ,0BAAYA,WAAW,KAAvB,mBADR,2CAC+G,0BAAYA,WAAW,KAAvB,YAD/G,yEAIF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,oDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gDAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8CAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,6FAAiH,0BAAYA,WAAW,KAAvB,eAGrH,iBAAQ,CACN,GAAM,uBADR,uBAGA,2DAA0C,0BAAYA,WAAW,KAAvB,uBAA1C,YACA,qBAAG,0BAAYA,WAAW,KAAvB,uBAAH,4CACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,0UAmBL,mCAAkB,0BAAYA,WAAW,KAAvB,YAAlB,mGACA,iBAAQ,CACN,GAAM,WADR,WAGA,8CAA6B,0BAAYA,WAAW,KAAvB,YAA7B,gGAAkL,kBAAIA,WAAW,MAAjM,wCACkC,0BAAYA,WAAW,KAAvB,uBADlC,gFACkL,kBAAIA,WAAW,MADjM,+BAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,w0DAAm1DC,SAAO,GAC33DL,QACAH,kBACAS,gBACAC,oBACAC,YACAC,SACAC,eACAC,WACAC,kBACAC,aACAC,qBACAC,QACAC,wBACAC,qBACAC,SACAC,eACAC,SACAC,aACAC,iBACAC,gBACAC,WACAC,sBACAC,iBAvB23D,gBAwB33D7B,IAxB23D,EAyB33DJ,eAzB23D,GA0B13DQ,QAAQ,eACR,WACC,IAAM0B,EAAe,WACnB,IAAMC,EAAUhB,YAAc,CAC5BiB,QAASN,MAELO,EAAYX,aAAW,SAAAY,GAAK,MAAK,CACrCC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,WAAWC,MAC1CC,MAAON,EAAMG,QAAQI,QAAQC,KAC7BC,QAAS,eACTC,UAAW,OACXC,cAAe,MACfC,MAAO,SAITC,EACE3B,cADF2B,UAfuB,EAoBrB5B,cAFF6B,EAlBuB,EAkBvBA,WACAC,EAnBuB,EAmBvBA,mBAEIC,EAAUjB,IAEhB,IAAKc,EACH,OAAO,KAGT,IAAMI,EAA4B,SAAAC,GAAW,OAAI,WAC/CJ,EAAWjB,EAAQsB,QAAQN,EAAWK,IACtCH,EAAmBlB,EAAQuB,aAAaP,MAGpCQ,EAAkBJ,EAA0B,IAC5CK,EAAoBL,EAA0B,GAC9CM,EAAoBN,EAA0B,GACpD,OAAO,mBAAKO,UAAWR,EAAQf,MACzB,YAAC,IAAD,CAAMwB,UAAU,MAAMC,OAAK,EAACC,aAAW,uBAAuBzD,QAAQ,QAClE,YAAC,IAAD,CAAU0D,QAAM,EAACC,QAASR,EAAiBnD,QAAQ,YAC/C,YAAC,IAAD,CAAcqC,QAAQ,qBAAqBrC,QAAQ,kBAEvD,YAAC,IAAD,CAAU0D,QAAM,EAACC,QAASP,EAAmBpD,QAAQ,YACjD,YAAC,IAAD,CAAcqC,QAAQ,oBAAoBrC,QAAQ,kBAEtD,YAAC,IAAD,CAAU0D,QAAM,EAACC,QAASN,EAAmBrD,QAAQ,YACjD,YAAC,IAAD,CAAcqC,QAAQ,oBAAoBrC,QAAQ,qBAWlE,OAAO,YAAC,IAAD,CAAU4B,QAASN,IAAasC,YAAU,EAAC9D,WAAY,CAC5DmB,KANiB,SAAAlB,GAAK,OAAI,uBACxB,YAAC2B,EAAD,CAAc1B,QAAQ,iBACtB,YAAC,IAAD,eAAUD,EAAV,CAAiBC,QAAQ,aAK1B6D,mBAAoB,GAAIC,aAAc,EAAG9D,QAAQ,gBAGxD,iBAAQ,CACN,GAAM,kBADR,kBAGA,qCAAoB,0BAAYC,WAAW,KAAvB,WAApB,eAAuF,0BAAYA,WAAW,KAAvB,oBAAvF,+DAAmN,kBAAIA,WAAW,MAAlO,8DAEA,8HACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wnBAAynBC,SAAO,GACjqBL,QACAH,kBACAS,gBACAC,oBACAC,YACAC,SACAC,eACAC,WACAC,kBACAC,aACAC,qBACAC,QACAC,wBACAC,qBACAC,SACAC,eACAC,SACAC,aACAC,iBACAC,gBACAC,WACAC,sBACAC,iBAvBiqB,gBAwBjqB7B,IAxBiqB,EAyBjqBJ,eAzBiqB,GA0BhqBQ,QAAQ,eACR,WAAM,MAC6BM,qBAA3ByD,EADF,KACaC,EADb,KAECC,EAAU5D,mBAiBhB,OAAO,YAAC,IAAD,CAAkB4D,QAASA,EAASrC,QAASN,IAAasC,YAAU,EAACM,iBAf/C,SAAAC,GAAS,IAC7BC,EAAwBD,EADK,MACLA,EADK,GAMhCF,EAAQI,SAFVzB,GAJkC,EAGlC0B,aAHkC,EAIlC1B,YACAjB,EALkC,EAKlCA,QAGGA,EAAQ4C,UAAUR,EAAWK,KAEhCxB,EADgBjB,EAAQ6C,SAASJ,EAAY,IAE7CJ,EAAaI,KAImGpE,QAAQ,oBACxH,YAAC,IAAD,CAAUA,QAAQ,iBAI1B,iBAAQ,CACN,GAAM,iBADR,iBAGA,qCAAoB,0BAAYC,WAAW,KAAvB,iBAApB,oBAAkG,0BAAYA,WAAW,KAAvB,oBAAlG,4CACA,yCAAwB,0BAAYA,WAAW,KAAvB,SAAxB,QAAkF,0BAAYA,WAAW,KAAvB,WAAlF,+BACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,uQAA0QC,SAAO,GAClTL,QACAH,kBACAS,gBACAC,oBACAC,YACAC,SACAC,eACAC,WACAC,kBACAC,aACAC,qBACAC,QACAC,wBACAC,qBACAC,SACAC,eACAC,SACAC,aACAC,iBACAC,gBACAC,WACAC,sBACAC,iBAvBkT,gBAwBlT7B,IAxBkT,EAyBlTJ,eAzBkT,GA0BjTQ,QAAQ,eACR,WAKC,OAAO,YAAC,IAAD,CAAkB4B,QAASN,IAAamD,cAJrB,SAACC,EAAUC,GACnCC,QAAQC,IAAI,YAAaH,EAAUC,IAG4C3E,QAAQ,oBACrF,YAAC,IAAD,CAAUA,QAAQ,uB,kMAQ9BH,EAAWiF,gBAAiB","file":"component---src-docs-state-mdx-3a321fc3ccd377e5b18d.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mark/Documents/dev/use-date-input3/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { useRef, useState } from 'react';\nimport { useDocs, Link, Playground } from 'docz';\nimport styled from \"styled-components\";\nimport { createDateAPI, Calendar, CalendarProvider, Day, useCalendarDispatch, useCalendarState, Root } from \"@use-date-input/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport dateAdapter from \"@use-date-input/date-fns-adapter\";\nimport getDay from \"date-fns/getDay\";\nimport eachDayOfInterval from \"date-fns/eachDayOfInterval\";\nimport sampleTheme from \"../../stories/sampleTheme\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst ShortcutList = makeShortcode(\"ShortcutList\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"state\"\n    }}>{`State`}</h1>\n    <h2 {...{\n      \"id\": \"approach\"\n    }}>{`Approach`}</h2>\n    <p>{`The state of `}<inlineCode parentName=\"p\">{`use-date-input`}</inlineCode>{` components is created and overridable using reducers.\nChange the existing state or create new state, whatever your composed components need.`}</p>\n    <p><inlineCode parentName=\"p\">{`use-date-input`}</inlineCode>{` comes with a number of common reducers which are composed together to create\nthe state for `}<inlineCode parentName=\"p\">{`useDateInput`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`useDateRangeInput`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Calender`}</inlineCode>{`.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`calendarReducer`}<br parentName=\"p\"></br>{`\n`}{`Creates the state for a stand-alone `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` with no associated input.\nAssociated actions include`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`focusDate - Focus a specific date`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`keyPress - Keyboard action`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`mouseClickOutside - Mouse clicked outside of Calendar (or allow list)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`navigatePrevious - Navigate to the previous month`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`navigateNext - Navigate to the next month`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`selectDate - Select a date (emulating keyboard or mouse selection)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`setAnimating - Create the transient state of animating between dates (used to prevent interim selection)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`setEnableKeyboardNavigation - Enable the navigation of the `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` cursor with the keyboard controls`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`setEndDate - Create an end date for a date range (programatically)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`setFocusableDate - Enable/Disable focusable dates within the `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`setKeyboardCursor - Set the keyboard cursor within the `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`setMouseCursor - Set the mouse cursor within the `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`setStartDate - Create an start date for a date range (programatically)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`setOpen - Open the visible state of the `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`setVisibleFromDate - Set the initial visible month`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`singleDateReducer\nCombines with `}<inlineCode parentName=\"p\">{`calendarReducer`}</inlineCode>{` to select a single date.  `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`dateRangeReducer\nCombines with `}<inlineCode parentName=\"p\">{`calendarReducer`}</inlineCode>{` to select a date Range.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`dateInputReducer`}<br parentName=\"p\"></br>{`\n`}{`Combines with `}<inlineCode parentName=\"p\">{`calendarReducer`}</inlineCode>{` to select a single date from either the `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` or an input.\nAssociated actions  `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`blurInput : Blur the associated input's focus`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`focusInput : Focus the associated input`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`focusLock : Enable/Disable the focus lock, so that tabbing behaviour links both input and `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`dateRangeInputReducer\nCombines with `}<inlineCode parentName=\"p\">{`calendarReducer`}</inlineCode>{` to select a date range from either the `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` or 2 inputs, representing start and end date.\nAssociated actions  `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`blurStartDate : Blur the associated input's focus`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`blurEndDate : Blur the associated input's focus`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`focusStartDate : Focus the associated input`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`focusEndDate : Focus the associated input`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`focusLock : Enable/Disable the focus lock, so that tabbing behaviour links both input and `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode></p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"usecalendardispatch\"\n    }}>{`useCalendarDispatch`}</h2>\n    <p>{`The actions are dispatched via the `}<inlineCode parentName=\"p\">{`useCalendarDispatch`}</inlineCode>{` hook.  `}</p>\n    <p><inlineCode parentName=\"p\">{`useCalendarDispatch`}</inlineCode>{` returns an API to dispatch the actions.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const {\n    dispatch,\n    mouseClickOutside,\n    navigateNext,\n    navigatePrevious,\n    selectDate,\n    setAnimating,\n    setEnableKeyboardNavigation,\n    setKeyboardCursor,\n    setMouseCursor,\n    setEndDate,\n    setStartDate,\n    setOpen,\n    setKeyPress,\n    setVisibleFromDate\n} = useCalendarDispatch();\n`}</code></pre>\n    <p>{`Either use `}<inlineCode parentName=\"p\">{`dispatch`}</inlineCode>{` to dispatch actions for yourself or use the helper function, which wrap the dispatch method.  `}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`Here is an example of `}<inlineCode parentName=\"p\">{`Calendar`}</inlineCode>{` composed together with components from Material-UI to create an additional list of shorcuts.`}<br parentName=\"p\"></br>{`\n`}{`This example uses a hook called `}<inlineCode parentName=\"p\">{`useCalendarDispatch`}</inlineCode>{`, to access dispatch methods, allowing you to dispatch actions to the reducer`}<br parentName=\"p\"></br>{`\n`}{`from your custom Root.`}</p>\n    <Playground __position={0} __code={'() => {\\n  const ShortcutList = () => {\\n    const dateAPI = createDateAPI({ adapter: dateAdapter })\\n    const useStyles = makeStyles(theme => ({\\n      root: {\\n        backgroundColor: theme.palette.background.paper,\\n        color: theme.palette.primary.main,\\n        display: \\'inline-block\\',\\n        marginTop: \\'40px\\',\\n        verticalAlign: \\'top\\',\\n        width: 150,\\n      },\\n    }))\\n    const { startDate } = useCalendarState()\\n    const { setEndDate, setVisibleFromDate } = useCalendarDispatch()\\n    const classes = useStyles()\\n    if (!startDate) {\\n      return null\\n    }\\n    const createNightsSelectHandler = numOfNights => () => {\\n      setEndDate(dateAPI.addDays(startDate, numOfNights))\\n      setVisibleFromDate(dateAPI.startOfMonth(startDate))\\n    }\\n    const handleTenNights = createNightsSelectHandler(10)\\n    const handleSevenNights = createNightsSelectHandler(7)\\n    const handleThreeNights = createNightsSelectHandler(3)\\n    return (\\n      <div className={classes.root}>\\n        <List component=\\\"nav\\\" dense aria-label=\\\"date range shortcuts\\\">\\n          <ListItem button onClick={handleTenNights}>\\n            <ListItemText primary=\\\"Stay for 10 nights\\\" />\\n          </ListItem>\\n          <ListItem button onClick={handleSevenNights}>\\n            <ListItemText primary=\\\"Stay for 7 nights\\\" />\\n          </ListItem>\\n          <ListItem button onClick={handleThreeNights}>\\n            <ListItemText primary=\\\"Stay for 3 nights\\\" />\\n          </ListItem>\\n        </List>\\n      </div>\\n    )\\n  }\\n  const CustomRoot = props => (\\n    <div>\\n      <ShortcutList />\\n      <Root {...props} />\\n    </div>\\n  )\\n  return (\\n    <Calendar\\n      adapter={dateAdapter}\\n      allowRange\\n      components={{\\n        Root: CustomRoot,\\n      }}\\n      numOfVisibleMonths={12}\\n      numOfColumns={4}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useRef,\n      useState,\n      useDocs,\n      Link,\n      Playground,\n      styled,\n      createDateAPI,\n      Calendar,\n      CalendarProvider,\n      Day,\n      useCalendarDispatch,\n      useCalendarState,\n      Root,\n      makeStyles,\n      List,\n      ListItem,\n      ListItemText,\n      dateAdapter,\n      getDay,\n      eachDayOfInterval,\n      sampleTheme,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const ShortcutList = () => {\n          const dateAPI = createDateAPI({\n            adapter: dateAdapter\n          });\n          const useStyles = makeStyles(theme => ({\n            root: {\n              backgroundColor: theme.palette.background.paper,\n              color: theme.palette.primary.main,\n              display: 'inline-block',\n              marginTop: '40px',\n              verticalAlign: 'top',\n              width: 150\n            }\n          }));\n          const {\n            startDate\n          } = useCalendarState();\n          const {\n            setEndDate,\n            setVisibleFromDate\n          } = useCalendarDispatch();\n          const classes = useStyles();\n\n          if (!startDate) {\n            return null;\n          }\n\n          const createNightsSelectHandler = numOfNights => () => {\n            setEndDate(dateAPI.addDays(startDate, numOfNights));\n            setVisibleFromDate(dateAPI.startOfMonth(startDate));\n          };\n\n          const handleTenNights = createNightsSelectHandler(10);\n          const handleSevenNights = createNightsSelectHandler(7);\n          const handleThreeNights = createNightsSelectHandler(3);\n          return <div className={classes.root}>\n                <List component=\"nav\" dense aria-label=\"date range shortcuts\" mdxType=\"List\">\n                    <ListItem button onClick={handleTenNights} mdxType=\"ListItem\">\n                        <ListItemText primary=\"Stay for 10 nights\" mdxType=\"ListItemText\" />\n                    </ListItem>\n                    <ListItem button onClick={handleSevenNights} mdxType=\"ListItem\">\n                        <ListItemText primary=\"Stay for 7 nights\" mdxType=\"ListItemText\" />\n                    </ListItem>\n                    <ListItem button onClick={handleThreeNights} mdxType=\"ListItem\">\n                        <ListItemText primary=\"Stay for 3 nights\" mdxType=\"ListItemText\" />\n                    </ListItem>\n                </List>\n            </div>;\n        };\n\n        const CustomRoot = props => <div>\n            <ShortcutList mdxType=\"ShortcutList\" />\n            <Root {...props} mdxType=\"Root\" />\n        </div>;\n\n        return <Calendar adapter={dateAdapter} allowRange components={{\n          Root: CustomRoot\n        }} numOfVisibleMonths={12} numOfColumns={4} mdxType=\"Calendar\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"changing-state\"\n    }}>{`Changing State`}</h2>\n    <p>{`Providing an `}<inlineCode parentName=\"p\">{`actions`}</inlineCode>{` ref to the `}<inlineCode parentName=\"p\">{`CalendarProvider`}</inlineCode>{` enables you to control the Component state externally using`}<br parentName=\"p\"></br>{`\n`}{`either the helper functions or the dispatcher itself.`}</p>\n    <p>{`In this example, the date range is created by setting the endDate, upon selection of the start date. `}</p>\n    <Playground __position={1} __code={'() => {\\n  const [storeDate, setStoreDate] = useState()\\n  const actions = useRef()\\n  const handleCalendarChange = value => {\\n    const [rangeStart, rangeEnd] = value\\n    const { setStartDate, setEndDate, dateAPI } = actions.current\\n    if (!dateAPI.isSameDay(storeDate, rangeStart)) {\\n      const endDate = dateAPI.addWeeks(rangeStart, 1)\\n      setEndDate(endDate)\\n      setStoreDate(rangeStart)\\n    }\\n  }\\n  return (\\n    <CalendarProvider\\n      actions={actions}\\n      adapter={dateAdapter}\\n      allowRange\\n      onCalendarChange={handleCalendarChange}\\n    >\\n      <Calendar />\\n    </CalendarProvider>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useRef,\n      useState,\n      useDocs,\n      Link,\n      Playground,\n      styled,\n      createDateAPI,\n      Calendar,\n      CalendarProvider,\n      Day,\n      useCalendarDispatch,\n      useCalendarState,\n      Root,\n      makeStyles,\n      List,\n      ListItem,\n      ListItemText,\n      dateAdapter,\n      getDay,\n      eachDayOfInterval,\n      sampleTheme,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const [storeDate, setStoreDate] = useState();\n        const actions = useRef();\n\n        const handleCalendarChange = value => {\n          const [rangeStart, rangeEnd] = value;\n          const {\n            setStartDate,\n            setEndDate,\n            dateAPI\n          } = actions.current;\n\n          if (!dateAPI.isSameDay(storeDate, rangeStart)) {\n            const endDate = dateAPI.addWeeks(rangeStart, 1);\n            setEndDate(endDate);\n            setStoreDate(rangeStart);\n          }\n        };\n\n        return <CalendarProvider actions={actions} adapter={dateAdapter} allowRange onCalendarChange={handleCalendarChange} mdxType=\"CalendarProvider\">\n            <Calendar mdxType=\"Calendar\" />\n        </CalendarProvider>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"reading-state\"\n    }}>{`Reading State`}</h2>\n    <p>{`Providing an `}<inlineCode parentName=\"p\">{`onStateChange`}</inlineCode>{` callback to the `}<inlineCode parentName=\"p\">{`CalendarProvider`}</inlineCode>{` enables you to respond to state change.`}</p>\n    <p>{`In this example, `}<inlineCode parentName=\"p\">{`state`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`changes`}</inlineCode>{` are logged to the console.`}</p>\n    <Playground __position={2} __code={'() => {\\n  const handleStateChange = (newState, changes) => {\\n    console.log(\\'new state\\', newState, changes)\\n  }\\n  return (\\n    <CalendarProvider adapter={dateAdapter} onStateChange={handleStateChange}>\\n      <Calendar />\\n    </CalendarProvider>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      useRef,\n      useState,\n      useDocs,\n      Link,\n      Playground,\n      styled,\n      createDateAPI,\n      Calendar,\n      CalendarProvider,\n      Day,\n      useCalendarDispatch,\n      useCalendarState,\n      Root,\n      makeStyles,\n      List,\n      ListItem,\n      ListItemText,\n      dateAdapter,\n      getDay,\n      eachDayOfInterval,\n      sampleTheme,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const handleStateChange = (newState, changes) => {\n          console.log('new state', newState, changes);\n        };\n\n        return <CalendarProvider adapter={dateAdapter} onStateChange={handleStateChange} mdxType=\"CalendarProvider\">\n            <Calendar mdxType=\"Calendar\" />\n        </CalendarProvider>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}