(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{Ixyf:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return j}));var n=a("Fcif"),r=a("+I+c"),p=(a("mXGw"),a("/FXl")),s=a("TjRS"),d=a("GYKu"),o=a("ZFoC"),l=a("9b5V"),b=a("1yxC"),c=a("1eR8"),u=a("Zm4p"),i=(a("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/date-frameworks.mdx"}});var m={_frontmatter:i},O=s.a;function j(e){var t,a,j,f,h,y=e.components,g=Object(r.a)(e,["components"]);return Object(p.b)(O,Object(n.a)({},m,g,{components:y,mdxType:"MDXLayout"}),Object(p.b)("h1",{id:"date-frameworks"},"Date Frameworks"),Object(p.b)("p",null,Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," provides an adapter API so that it can work with any date frameworks."),Object(p.b)("p",null,"To keep the bundle size low and to let the user manage dependencies, the provided adapters",Object(p.b)("br",{parentName:"p"}),"\n","require peer dependencies to specify the date API."),Object(p.b)("p",null,"The adapter interface is provided to ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components through the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop."),Object(p.b)("p",null,"Adapters have been created for all the popular Date frameworks"),Object(p.b)("ul",null,Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",{href:"https://date-fns.org/",target:"__blank__"},"date-fns")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",{href:"https://day.js.org/",target:"__blank__"},"dayjs")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",{href:"https://moment.github.io/luxon/",target:"__blank__"},"luxon")),Object(p.b)("li",{parentName:"ul"},Object(p.b)("a",{href:"https://momentjs.com/",target:"__blank__"},"moment")),Object(p.b)("li",{parentName:"ul"},"... or write your own")),Object(p.b)("h2",{id:"with-date-fns"},"With date-fns"),Object(p.b)("p",null,"Install the dependencies with"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"yarn add @date-fns\nyarn add @use-date-input/date-fns-adapter\n")),Object(p.b)("p",null,"OR"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"npm install -s @date-fns\nnpm install -s @use-date-input/date-fns-adapter\n")),Object(p.b)("p",null,"Import the adapter into your component"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import dateFnsAdapter from "@use-date-input/date-fns-adapter";\n')),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop with the ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components."),Object(p.b)(o.c,{__position:0,__code:"() => {\n  return (\n    <Calendar\n      adapter={dateFnsAdapter}\n      numOfColumns={2}\n      numOfVisibleMonths={2}\n    />\n  )\n}",__scope:(t={props:g,DefaultLayout:s.a,Calendar:d.a,Playground:o.c,dateFnsAdapter:l.a,dayjsAdapter:b.a,luxonAdapter:c.a,momentAdapter:u.a},t.DefaultLayout=s.a,t._frontmatter=i,t),mdxType:"Playground"},(function(){return Object(p.b)(d.a,{adapter:l.a,numOfColumns:2,numOfVisibleMonths:2,mdxType:"Calendar"})})),Object(p.b)("h2",{id:"with-dayjs"},"With dayjs"),Object(p.b)("p",null,"Install the dependencies with"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"yarn add @dayjs\nyarn add @use-date-input/dayjs-adapter\n")),Object(p.b)("p",null,"OR"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"npm install -s @dayjs\nnpm install -s @use-date-input/dayjs-adapter\n")),Object(p.b)("p",null,"Import the adapter into your component"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import dayjsAdapter from "@use-date-input/dayjs-adapter";\n')),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop with the ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components."),Object(p.b)(o.c,{__position:1,__code:"() => {\n  return (\n    <Calendar\n      adapter={dayjsAdapter}\n      numOfColumns={2}\n      numOfVisibleMonths={2}\n    />\n  )\n}",__scope:(a={props:g,DefaultLayout:s.a,Calendar:d.a,Playground:o.c,dateFnsAdapter:l.a,dayjsAdapter:b.a,luxonAdapter:c.a,momentAdapter:u.a},a.DefaultLayout=s.a,a._frontmatter=i,a),mdxType:"Playground"},(function(){return Object(p.b)(d.a,{adapter:b.a,numOfColumns:2,numOfVisibleMonths:2,mdxType:"Calendar"})})),Object(p.b)("h2",{id:"with-luxon"},"With luxon"),Object(p.b)("p",null,"Install the dependencies with"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"yarn add @luxon\nyarn add @use-date-input/luxon-adapter\n")),Object(p.b)("p",null,"OR"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"npm install -s @luxon\nnpm install -s @use-date-input/luxon-adapter\n")),Object(p.b)("p",null,"Import the adapter into your component"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import luxonAdapter from "@use-date-input/dayjs-adapter";\n')),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop with the ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components."),Object(p.b)(o.c,{__position:2,__code:"() => {\n  return (\n    <Calendar\n      adapter={luxonAdapter}\n      numOfColumns={2}\n      numOfVisibleMonths={2}\n    />\n  )\n}",__scope:(j={props:g,DefaultLayout:s.a,Calendar:d.a,Playground:o.c,dateFnsAdapter:l.a,dayjsAdapter:b.a,luxonAdapter:c.a,momentAdapter:u.a},j.DefaultLayout=s.a,j._frontmatter=i,j),mdxType:"Playground"},(function(){return Object(p.b)(d.a,{adapter:c.a,numOfColumns:2,numOfVisibleMonths:2,mdxType:"Calendar"})})),Object(p.b)("h2",{id:"with-moment"},"With moment"),Object(p.b)("p",null,"Install the dependencies with"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"yarn add @moment\nyarn add @use-date-input/moment-adapter\n")),Object(p.b)("p",null,"OR"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell",metastring:"script",script:!0}),"npm install -s @moment\nnpm install -s @use-date-input/moment-adapter\n")),Object(p.b)("p",null,"Import the adapter into your component"),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),'import momentAdapter from "@use-date-input/moment-adapter";\n')),Object(p.b)("p",null,"Use the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop with the ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components."),Object(p.b)(o.c,{__position:3,__code:"() => {\n  return (\n    <Calendar\n      adapter={momentAdapter}\n      numOfColumns={2}\n      numOfVisibleMonths={2}\n    />\n  )\n}",__scope:(f={props:g,DefaultLayout:s.a,Calendar:d.a,Playground:o.c,dateFnsAdapter:l.a,dayjsAdapter:b.a,luxonAdapter:c.a,momentAdapter:u.a},f.DefaultLayout=s.a,f._frontmatter=i,f),mdxType:"Playground"},(function(){return Object(p.b)(d.a,{adapter:u.a,numOfColumns:2,numOfVisibleMonths:2,mdxType:"Calendar"})})),Object(p.b)("h2",{id:"week-offset"},"Week Offset"),Object(p.b)("p",null,"Date frameworks use different week offsets, so you can customize on ",Object(p.b)("inlineCode",{parentName:"p"},"use-date-input")," components through the use of the ",Object(p.b)("inlineCode",{parentName:"p"},"weekOffset")," prop"),Object(p.b)(o.c,{__position:4,__code:"() => {\n  return (\n    <Calendar\n      adapter={luxonAdapter}\n      numOfColumns={2}\n      numOfVisibleMonths={2}\n      weekOffset={6}\n    />\n  )\n}",__scope:(h={props:g,DefaultLayout:s.a,Calendar:d.a,Playground:o.c,dateFnsAdapter:l.a,dayjsAdapter:b.a,luxonAdapter:c.a,momentAdapter:u.a},h.DefaultLayout=s.a,h._frontmatter=i,h),mdxType:"Playground"},(function(){return Object(p.b)(d.a,{adapter:c.a,numOfColumns:2,numOfVisibleMonths:2,weekOffset:6,mdxType:"Calendar"})})),Object(p.b)("h2",{id:"write-your-own-adapter"},"Write Your Own Adapter"),Object(p.b)("p",null,"To write your own adapter or customize the existing adapters, you need to build this interface and provide it\nthrough the ",Object(p.b)("inlineCode",{parentName:"p"},"adapter")," prop."),Object(p.b)("pre",null,Object(p.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"const adaptDateAPI = ({ weekOffset = 0 } = {}) => ({\n  addDays,\n  addMonths,\n  addWeeks,\n  addYears,\n  createDate,\n  daysInMonth,\n  dayOfWeek,\n  diffInDays,\n  diffInMonths,\n  endOfMonth,\n  endOfWeek,\n  endOfYear,\n  format,\n  getDateFormat,\n  isAfter,\n  isBefore,\n  isSameDay,\n  isSameMonth,\n  isValid:\n  set,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n  subtractDays,\n  subtractMonths,\n  subtractWeeks,\n  subtractYears\n});\n")),Object(p.b)("p",null,"For the most part this is just, mapping these callbacks to the equivalent date framework call.  "),Object(p.b)("p",null,"For further details, refer to the provided adapters to see an example in code.\n",Object(p.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/mark-tate/use-date-input/blob/master/packages/date-fns-adapter/src/index.js"}),"dayjs")))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!j.hasOwnProperty("__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/date-frameworks.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-date-frameworks-mdx-6894a6596654261faabe.js.map